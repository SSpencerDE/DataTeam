<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/23/2014 3:05:54 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="MN-DE-WSQLJS-D1"
  DTS:CreatorName="DATACENTER\tspagnoli"
  DTS:DelayValidation="True"
  DTS:DTSID="{4D557285-2EAE-423C-A137-149DE9DF76A0}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="LTIcommonCartridge"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:TransactionOption="0"
  DTS:VersionBuild="424"
  DTS:VersionGUID="{712096DB-9B6D-4B70-B27E-7C62BF32919F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[folder creation]"
      DTS:CreationName="FILE"
      DTS:DTSID="{B97636EA-5F40-4B2E-ADAC-9955C83C1465}"
      DTS:ObjectName="folder creation">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::FileCreationFolder] +  @[User::vProduct] +"\\" + (DT_STR, 6, 1252) @[User::vFolderID]  + "\\BasicLTI"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="3"
          DTS:ConnectionString="C:\Users\tgeer\Downloads\CommonCartridge\Egypt\2016.11.15.02\0\BasicLTI" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[IMS Soap Api]"
      DTS:CreationName="HTTP"
      DTS:DTSID="{ACE68690-6E53-49D4-98F9-EB022586B3E3}"
      DTS:ObjectName="IMS Soap Api">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="http://membervalidator.imsglobal.org/CCValidationService?WSDL">
          <DTS:HttpConnection
            DTS:ServerURL="http://membervalidator.imsglobal.org/CCValidationService?WSDL"
            DTS:UseServerCredentials="True"
            DTS:ServerUserName="TimSpagnoli">
            <DTS:Property
              DTS:Name="ServerPassword"
              Sensitive="1"></DTS:Property>
            <DTS:Property
              DTS:Name="ProxyPassword"
              Sensitive="1"></DTS:Property>
          </DTS:HttpConnection>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Manifest]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{FCCA7A3F-2C88-49DA-A878-9603AC18636B}"
      DTS:ObjectName="Manifest">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::FileCreationFolder] + @[User::vProduct]  +"\\" + (DT_STR, 6, 1252) @[User::vID] + "\\" +  "imsmanifest.xml"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\Users\tgeer\Downloads\CommonCartridge\Egypt\2016.11.15.02\0\imsmanifest.xml">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:DataType="303"
              DTS:TextQualified="True"
              DTS:ObjectName="xmlData"
              DTS:DTSID="{70E4B062-09A7-441F-B7BA-3C64ACE7B275}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[soap responses]"
      DTS:CreationName="FILE"
      DTS:DTSID="{1784D62B-C3EE-4DB1-9B36-877B9CB7E448}"
      DTS:ObjectName="soap responses">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\Users\tspagnoli\Desktop\files\cc\soap responses\History 0.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[zip file destination]"
      DTS:CreationName="FILE"
      DTS:DTSID="{F1826E46-5455-4DBB-AAFE-62169572767E}"
      DTS:ObjectName="zip file destination">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::FileCreationFolder] + "Discovery_EDU_" + (DT_STR, 6, 1252) @[User::vFolderID]  + ".imscc"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="C:\Users\tgeer\Downloads\CommonCartridge\Egypt\2016.11.15.02Discovery_EDU_0.imscc" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[zip file source]"
      DTS:CreationName="FILE"
      DTS:DTSID="{46837F9A-4E4E-43FF-AFE5-71FEE4F40CC0}"
      DTS:ObjectName="zip file source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::FileCreationFolder] + @[User::vProduct]  +"\\" +  (DT_STR, 6, 1252) @[User::vFolderID]   + "\\"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\Users\tgeer\Downloads\CommonCartridge\Egypt\2016.11.15.02\0\" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5CCEF512-8256-459B-9747-E15272B11C88}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::AccountGuid]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AccountGuid">
      <DTS:VariableValue
        DTS:DataType="8">10000000-0000-E354-6C1A-000000000000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0F1DC760-79AC-4D94-80A3-E8AB82A278FB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::MediaGroups]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MediaGroups">
      <DTS:VariableValue
        DTS:DataType="8">326</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B8ECC1F-ED89-493F-AD65-C18973D8D29A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="oRowSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F004C5E-49C3-4FAE-B9D0-F9D08E172294}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;execute dbo.spManifestFileContents @AccountGuid = '&quot; + @[User::AccountGuid]  + &quot;', @ID = &quot; +  (DT_STR, 10, 1252) @[User::vID] + &quot;&#xA;with result sets&#xA;(&#xA;(&#xA;GroupID varchar(50),&#xA;SubGroupID varchar(50),&#xA;ResourceID varchar(6),&#xA;XMLData nvarchar(2000)&#xA;)&#xA;)&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLManifestSource">
      <DTS:VariableValue
        DTS:DataType="8">execute dbo.spManifestFileContents @AccountGuid = '10000000-0000-E354-6C1A-000000000000', @ID = 0
with result sets
(
(
GroupID varchar(50),
SubGroupID varchar(50),
ResourceID varchar(6),
XMLData nvarchar(2000)
)
)
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2CC1BC92-CAA0-4AAC-BEED-C65831F7ED84}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;execute dbo.spResourceFileContents @AccountGuid = '&quot; +  @[User::AccountGuid] + &quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLStreamingSource">
      <DTS:VariableValue
        DTS:DataType="8">execute dbo.spResourceFileContents @AccountGuid = '10000000-0000-E354-6C1A-000000000000'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BBF34638-4D16-4EEF-9010-FEE2728270A8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vBatchSize">
      <DTS:VariableValue
        DTS:DataType="3">5000000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34708D16-2948-4376-973E-7EB2DD5E7810}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vFileName">
      <DTS:VariableValue
        DTS:DataType="8">000001</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82A5880F-5E9E-445A-B0FA-1CB8A8CCCACE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vFolderID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CAF9C4AF-D0F8-40DC-8D58-0872D4D8204D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5B31336-46DA-4D62-AC26-0ADE6C27E495}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vMaxID">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{228B10F0-D55C-4073-9876-7BFA528F1EEF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vProduct">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3629ADB5-6E0D-41EB-8D07-53AD9D0BC64D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vXmlData">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\calculate number of batches"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5044A94A-B42A-4F7F-B3FE-1A3924A79DAE}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="calculate number of batches"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{38AD5756-0F00-4B01-8036-A146C1A9BD02}"
          SQLTask:SqlStatementSource="select max(batchId) as batchId from Workdb.dbo.CommonCartridge CC where CC.AccountGuid = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="batchId"
            SQLTask:DtsVariableName="User::vMaxID" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::AccountGuid"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Cartridges"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C89AAA70-7765-4410-84B4-DEFCA2C0BABE}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Cartridges"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create Cartridges\resource Source"
              componentClassID="DTSAdapter.OLEDBSource.3"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="resource Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">execute dbo.spResourceFileContents ?</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable">User::SQLStreamingSource</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping">"@AccountGuid:Input",{5CCEF512-8256-459B-9747-E15272B11C88};</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create Cartridges\resource Source.Connections[OleDbConnection]"
                  connectionManagerID="{38AD5756-0F00-4B01-8036-A146C1A9BD02}:external"
                  connectionManagerRefId="Project.ConnectionManagers[mn-de-wsql-p4 Workdb]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].Columns[xmlData]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].ExternalColumns[xmlData]"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].Columns[xmlData]"
                      name="xmlData"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].Columns[FileNames]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].ExternalColumns[FileNames]"
                      length="6"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].Columns[FileNames]"
                      name="FileNames"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].ExternalColumns[xmlData]"
                      dataType="nText"
                      name="xmlData" />
                    <externalMetadataColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].ExternalColumns[FileNames]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      name="FileNames" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[FileNames]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[FileNames]"
                      name="FileNames" />
                    <outputColumn
                      refId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[xmlData]"
                      dataType="nText"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Error Output].Columns[xmlData]"
                      name="xmlData" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Cartridges\Script Component"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
#endregion


/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion


    // initialize parameters
    int batchSize;
    string fileCreationFolder;
    string resourceFolder;
    string filePath;
    string fileName;
    string xmlData;
    string productRun;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {

        base.PreExecute();

        batchSize = Variables.vBatchSize; // Dts.Variables["User::vBatchSize"].Value;
        fileCreationFolder = Variables.FileCreationFolder; // Dts.Variables["$Project::FileCreationFolder"].Value;
        resourceFolder = Variables.ResourceFolder; // (string)Dts.Variables["$Project::ResourceFolder"].Value;
        productRun = Variables.vProduct; // (string)Dts.Variables["User::vProduct"].Value;

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        fileName = Row.FileNames;
        xmlData = BlobColumnToString(Row.xmlData);

        double PlaceInBatch = Convert.ToInt32(fileName) / batchSize;
        filePath = fileCreationFolder + productRun + "\\" + Math.Floor(PlaceInBatch) + "\\" + resourceFolder + fileName + ".xml";

        System.IO.File.WriteAllText(filePath, xmlData, Encoding.UTF8);
      
    }
    string BlobColumnToString(BlobColumn blobColumn)
    {
        if (blobColumn.IsNull)
            return string.Empty;

        var blobLength = Convert.ToInt32(blobColumn.Length);
        var blobData = blobColumn.GetBlobData(0, blobLength);
        var stringData = Encoding.Unicode.GetString(blobData);

        return stringData;
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileNames
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FileNames_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public BlobColumn xmlData
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[1]];
        }
    }
    public bool xmlData_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String FileCreationFolder
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FileCreationFolder"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ResourceFolder
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ResourceFolder"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 vBatchSize
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["vBatchSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vFileName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["vFileName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 vFolderID
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["vFolderID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vProduct
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["vProduct"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String vXmlData
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["vXmlData"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5316bee694174ad9be1654df2eb73a0e.Properties.Settings.get_Default():SC_5316bee694174ad9be1654df2eb73a0e.Properties.Sett" +
    "ings")]

namespace SC_5316bee694174ad9be1654df2eb73a0e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_5316bee694174ad9be1654df2eb73a0e</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_5316bee694174ad9be1654df2eb73a0e</msb:DisplayName>
		<msb:ProjectId>{A1565E6D-943D-4098-942C-53509BAC3FE1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_5316bee694174ad9be1654df2eb73a0e.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_5316bee694174ad9be1654df2eb73a0e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_5316bee694174ad9be1654df2eb73a0e")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5316bee694174ad9be1654df2eb73a0e.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{AD9E7490-AD75-432E-81DE-85C347FC4C82}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_5316bee694174ad9be1654df2eb73a0e</RootNamespace>
    <AssemblyName>SC_5316bee694174ad9be1654df2eb73a0e</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5316bee694174ad9be1654df2eb73a0e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5316bee694174ad9be1654df2eb73a0e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5316bee694174ad9be1654df2eb73a0e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_5316bee694174ad9be1654df2eb73a0e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_5316bee694174ad9be1654df2eb73a0e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5316bee694174ad9be1654df2eb73a0e.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABByClgAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAADjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALw3AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
NwAAAAAAAEgAAAACAAUA4CMAACQTAAABAAAAAAAAAAQ3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgBLAAAAAAAAAAIoEAAACgICewkAAARvFQAABn0BAAAE
AgJ7CQAABG8TAAAGfQIAAAQCAnsJAAAEbxQAAAZ9AwAABAICewkAAARvGAAABn0HAAAEKh4CKBEA
AAoqABMwBQCkAAAAAQAAEQIDbwcAAAZ9BQAABAICA28JAAAGKAQAAAZ9BgAABAJ7BQAABCgSAAAK
AnsBAAAEW2wKAh6NEwAAASUWAnsCAAAEoiUXAnsHAAAEoiUYcgEAAHCiJRkGKBMAAAqMHQAAAaIl
GnIBAABwoiUbAnsDAAAEoiUcAnsFAAAEoiUdcgUAAHCiKBQAAAp9BAAABAJ7BAAABAJ7BgAABCgV
AAAKKBYAAAoqEzADAC8AAAACAAARA28XAAAKLAZ+GAAACioDbxkAAAooGgAACgoDFgZvGwAACgso
HAAACgdvHQAACioeAigNAAAGKioCAwQFKB4AAAoqUgJ7HwAACgJ7IAAAChaUbyEAAAoqIgIWKCIA
AAoqZgJ7HwAACgJ7IAAACheUbyMAAAp0DgAAASoiAhcoIgAACioeAigkAAAKKh4CKCUAAAoqfgIo
JgAACgICcxEAAAZ9CAAABAICcxIAAAZ9CQAABCqSBHIPAABwGm8nAAAKLBUCBQIDKCgAAAoOBHMG
AAAGbw8AAAYqSisHAgNvEAAABgNvCwAABi3xKgYqOgIoKQAACgIDfQoAAAQqOgIoKQAACgIDfQsA
AAQqlgJ7CwAABG8qAAAKch8AAHBvKwAACigsAAAKby0AAAp0HgAAASqWAnsLAAAEbyoAAApyRQAA
cG8rAAAKKCwAAApvLQAACnQeAAABKpYCewsAAARvKgAACnJjAABwbysAAAooLAAACm8tAAAKpSYA
AAEqlgJ7CwAABG8qAAAKcnkAAHBvKwAACigsAAAKby0AAAp0HgAAASqWAnsLAAAEbyoAAApyjQAA
cG8rAAAKKCwAAApvLQAACqUmAAABKpYCewsAAARvKgAACnKhAABwbysAAAooLAAACm8tAAAKdB4A
AAEqlgJ7CwAABG8qAAAKcrMAAHBvKwAACigsAAAKby0AAAp0HgAAASoeAigpAAAKKq5+DAAABC0e
csUAAHDQBwAAAiguAAAKby8AAApzMAAACoAMAAAEfgwAAAQqGn4NAAAEKh4CgA0AAAQqGn4OAAAE
Kh4CKDEAAAoqLnMfAAAGgA4AAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
APwGAAAjfgAAaAcAAGAIAAAjU3RyaW5ncwAAAADIDwAAOAEAACNVUwAAEQAAEAAAACNHVUlEAAAA
EBEAABQCAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAApAAAACAAAAA4AAAAg
AAAADgAAADEAAAAQAAAAAgAAAAQAAAAOAAAADwAAAAEAAAAFAAAAAQAAAAAA8QMBAAAAAAAGAJoC
/wUGAC4D/wUGAOYB7AUPAHMGAAAGABMCswQGAH0CswQGAF4CswQGABUDswQGALoCswQGANMCswQG
ACoCswQGAEUCiwMKAO4CMwEOAHMEMwEKAJAFMwEOAIEFMwEKAO0EMwEKAGcHMwEGAB0HVQQGAMkB
7AUGAKEFHwYGAOEEngQSAJkB2wMSAPoB2wMSAIEBiQQGAK4B/wUGAJQHVQQGAMIDVQQGAOIAVQQG
ALsDVQQGAIID0QcGAA0BagAGAMUEVQQWABEAsQUWAAEAsQVLAP4HAAAWACIAsQUGADwAVQQGAFQB
VQQGAOkAVQQGAFEIswQAAAAASwAAAAAAAQABAAEAEABoBAAAEAABAAEAAQAQAHQFAAA9AAgABgAB
ABAASQcAAEkACAANAAEAEAAKBwAATQAKABEAAQAQAL0GAABNAAsAEgAAABAAJgaCBk0ADAAaAAAB
EAD6BoIGZQAOAB4AAQB4A9EAAQBhBUYAAQA7BUYAAQDHA0YAAQAgAUYAAQCRAEYAAQDWBEYABgAK
B9QABgC9BtgAAQBXB9wAAQBXB9wAEQBcBOAAEQBxAeQAEQDGAOgAUCAAAAAAxgBMAwYAAQCnIAAA
AADGAFcDBgABALAgAAAAAMYALgjsAAEAYCEAAAAAgQClA/IAAgCbIQAAAACGGN8FBgADAKMhAAAA
AIYY3wVfAAMAriEAAAAAhgjHBvgABgDDIQAAAACGCCwEQgAGAMwhAAAAAIYIjQD8AAYA5iEAAAAA
hggZBEIABgDvIQAAAACGAEUIQgAGAPchAAAAAIYAMQdCAAYA/yEAAAAAhhjfBQYABgAfIgAAAADG
AMQHAQEGAEQiAAAAAMYBvQfsAAoAVyIAAAAAxgEuCOwACwBZIgAAAACGGN8FCwEMAGgiAAAAAIYY
3wULAQ0AdyIAAAAAhghKBfgADgCdIgAAAACGCCgF+AAOAMMiAAAAAIYIaQMRAQ4A6SIAAAAAhggS
AfgADgAPIwAAAACGCFQAEQEOADUjAAAAAIYIJAf4AA4AWyMAAAAAhgiAAPgADgCBIwAAAACDGN8F
BgAOAIkjAAAAAJMInQUVAQ4AtSMAAAAAkwhZARoBDgC8IwAAAACTCGUBHwEOAMQjAAAAAJYIPQcl
AQ8AyyMAAAAAhhjfBQYADwDTIwAAAACRGOUFKgEPAAAAAQBJCAAAAQB+BAAAAQCWBQAAAgDVBgAA
AwD7BAAAAQBiAAAAAgApAQAAAwCWBQAABAD7BAAAAQCWBQAAAQBJCAAAAQBtBwAAAQBtBwAAAQBj
AwkA3wUBABEA3wUGABkA3wUKACkA3wUQADEA3wUQADkA3wUQAEEA3wUQAEkA3wUQAFEA3wUQAFkA
3wUQAGEA3wUQAGkA3wUGAKEA3wUGAMEA3wUVANEA3wUGAJEATAMGAJEAVwMGANkAOgAfAOEA2QUk
APEAFgcpAPkAQgAvAAEB3Qc0AHEAQQRCAPEAWghGAHEA0ANJANkAOgBNAHEAdABSAPkA1gAvAPkA
uANZAHkA3wVfAHkAlgVpAHkA1QZtAIEAuANxAHkARQR2AIEATAR7AHkARQhCAHkAMQdCAJEA3wUG
APEAAweAAJEA6QaIAJkA3wUGAJEAsQaOABEBTASUAJEAGQibABkB6gehADkB+wCoADkBTQixAKkA
3wW3AMkA3wUGAC4ACwBOAS4AEwBXAS4AGwB2AS4AIwB/AS4AKwCoAS4AMwCoAS4AOwCoAS4AQwB/
AS4ASwCuAS4AUwCoAS4AWwDFAUMAYwANAuMAawANAokBcwB2AakBcwB2AcEBewANAhsAPAADAAEA
BgAFAAcADAAIAA4AAADLBi4BAAAwBDIBAACRADYBAAAdBDIBAABOBS4BAAAsBS4BAABtAzsBAAAW
AS4BAABYADsBAAAoBy4BAACEAC4BAAChBT8BAAB5AUQBAABBB0kBAgAHAAMAAgAIAAUAAgAJAAcA
AgAKAAkAAgATAAsAAgAUAA0AAgAVAA8AAgAWABEAAgAXABMAAgAYABUAAgAZABcAAgAbABkAAgAc
ABsAAQAdABsAAgAeAB0ABIAAAAEAAAD6F6BoAAAAAAAAogAAAAQAAAAAAAAAAAAAAL8AmQAAAAAA
CwAAAAAAAAAAAAAAyAB3BwAAAAALAAAAAAAAAAAAAADIAJwHAAAAAAQAAAAAAAAAAAAAAL8AVQQA
AAAACwAAAAAAAAAAAAAAyAAFBQAAAAAAAAAAAQAAADAGAAAAAABJRFRTVmFyaWFibGUxMDAASURU
U1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABUb0ludDMyAGdldF9VVEY4ADxN
b2R1bGU+AGdldF92Rm9sZGVySUQASW5wdXRJRABTeXN0ZW0uSU8AR2V0QmxvYkRhdGEAZ2V0X3ZY
bWxEYXRhAGdldF94bWxEYXRhAG1zY29ybGliAFNDXzUzMTZiZWU2OTQxNzRhZDliZTE2NTRkZjJl
YjczYTBlAGRlZmF1bHRJbnN0YW5jZQBnZXRfVW5pY29kZQBEb3VibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBnZXRfdkZpbGVOYW1lAGZpbGVOYW1lAElucHV0TmFt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJh
bWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURl
c2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRD
b21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAGdl
dF92QmF0Y2hTaXplAGJhdGNoU2l6ZQBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AEJsb2JDb2x1bW5Ub1N0cmluZwBHZXRTdHJpbmcATWF0aABmaWxlUGF0aABnZXRfTGVuZ3RoAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTQ181MzE2YmVlNjk0MTc0YWQ5YmUxNjU0ZGYyZWI3M2EwZS5k
bGwAZ2V0X3htbERhdGFfSXNOdWxsAGdldF9GaWxlTmFtZXNfSXNOdWxsAGdldF9Jc051bGwAZ2V0
X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AQmxvYkNvbHVtbgBibG9iQ29sdW1u
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAFN0cmluZ0NvbXBhcmlzb24AcHJvZHVjdFJ1bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFw
AE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAGdldF9SZXNvdXJj
ZUZvbGRlcgByZXNvdXJjZUZvbGRlcgBnZXRfRmlsZUNyZWF0aW9uRm9sZGVyAGZpbGVDcmVhdGlv
bkZvbGRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNv
dXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAEZsb29y
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzUzMTZiZWU2OTQxNzRhZDliZTE2NTRkZjJlYjcz
YTBlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ181MzE2
YmVlNjk0MTc0YWQ5YmUxNjU0ZGYyZWI3M2EwZS5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlh
YmxlcwBnZXRfRmlsZU5hbWVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABnZXRfdlByb2R1Y3QARW5k
T2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0
Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AFdy
aXRlQWxsVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0
AGdldF9FdmFsdWF0b3JDb250ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRf
QXNzZW1ibHkARW1wdHkAAANcAAAJLgB4AG0AbAAAD0kAbgBwAHUAdAAgADAAACVGAGkAbABlAEMA
cgBlAGEAdABpAG8AbgBGAG8AbABkAGUAcgAAHVIAZQBzAG8AdQByAGMAZQBGAG8AbABkAGUAcgAA
FXYAQgBhAHQAYwBoAFMAaQB6AGUAABN2AEYAaQBsAGUATgBhAG0AZQAAE3YARgBvAGwAZABlAHIA
SQBEAAARdgBQAHIAbwBkAHUAYwB0AAARdgBYAG0AbABEAGEAdABhAABxUwBDAF8ANQAzADEANgBi
AGUAZQA2ADkANAAxADcANABhAGQAOQBiAGUAMQA2ADUANABkAGYAMgBlAGIANwAzAGEAMABlAC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAMosP21f+fUq8V2hnpCks
dwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQMHAQ0EAAEIDgQAAQ0NBQABDh0cBAAAEn0HAAMB
Dg4SfQUHAggdBQMgAAICBg4DIAAJBAABCAkGIAIdBQgIBSABDh0FCSADARJBHQgSRQMGEkEDBh0I
BCABDggEIAECCAQgARwIByACAg4RgIUFIAEdCAgFIAASgIkGIAESgI0cBQAAEoCRBiABHBKAlQgA
ARKAnRGAoQUgABKApQcgAgEOEoClCLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMGEhgDBhJJAwYS
VQMGElkDBhIgBSABARIMBSABDhI5AyAADgQgABI5CSAEAQgOEkESRQUgAQESSQMgAAgEAAASVQQA
ABJZBQABARJZBAAAEiADAAABAygADgMoAAIEKAASOQMoAAgECAASVQQIABJZBAgAEiAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzUzMTZiZWU2
OTQxNzRhZDliZTE2NTRkZjJlYjczYTBlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAEcB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5F
VCBGcmFtZXdvcmsgNAQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA5DcAAAAAAAAAAAAA/jcAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAPA3AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAoGj6FwAAAQCgaPoXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA1ADMAMQA2AGIAZQBlADYAOQA0ADEANwA0AGEAZAA5AGIAZQAxADYANQA0AGQAZgAyAGUA
YgA3ADMAYQAwAGUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAx
ADMAOAAuADIANgA3ADgANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMA
XwA1ADMAMQA2AGIAZQBlADYAOQA0ADEANwA0AGEAZAA5AGIAZQAxADYANQA0AGQAZgAyAGUAYgA3
ADMAYQAwAGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAQwBfADUAMwAxADYAYgBlAGUANgA5ADQAMQA3ADQAYQBkADkAYgBlADEANgA1ADQAZABm
ADIAZQBiADcAMwBhADAAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAEMAXwA1ADMAMQA2AGIAZQBlADYAOQA0ADEANwA0AGEAZAA5AGIAZQAxADYANQA0AGQAZgAy
AGUAYgA3ADMAYQAwAGUAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMQAzADgALgAyADYANwA4ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMQAzADgALgAyADYANwA4ADQAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAEDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_5316bee694174ad9be1654df2eb73a0e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::vBatchSize,User::vFileName,User::vFolderID,User::vProduct,User::vXmlData,$Project::FileCreationFolder,$Project::ResourceFolder</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">ac71bd66fb082d2a5eec44616ea3b273</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">ab369fee3e20a7be74b635537379eb44cd168782</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create Cartridges\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Cartridges\Script Component.Inputs[Input 0].Columns[FileNames]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="6"
                      cachedName="FileNames"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].Columns[FileNames]" />
                    <inputColumn
                      refId="Package\Create Cartridges\Script Component.Inputs[Input 0].Columns[xmlData]"
                      cachedDataType="nText"
                      cachedName="xmlData"
                      lineageId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output].Columns[xmlData]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create Cartridges.Paths[OLE DB Source Output]"
              endId="Package\Create Cartridges\Script Component.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Create Cartridges\resource Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\directory loop"
      DTS:AssignExpression="@vFolderID = @vFolderID + 1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{9A610FF5-C97B-4915-80FC-A082117F5E05}"
      DTS:EvalExpression="@vFolderID &lt;= @vMaxID"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="directory loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\directory loop\verify directory exists"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="File System Task"
          DTS:DTSID="{6C6A8B5C-A246-474B-8369-72C8630D2A9F}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="verify directory exists"
          DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="CreateDirectory"
              TaskOverwriteDestFile="True"
              TaskSourcePath="{B97636EA-5F40-4B2E-ADAC-9955C83C1465}" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\manifest loop"
      DTS:AssignExpression="@vID = @vID + 1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{A7FE6E23-9DF3-4683-ADB1-56F3894DC323}"
      DTS:EvalExpression="@vID &lt;= @vMaxID"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@vID = 0"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="manifest loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\manifest loop\streaming"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{4FB1A35C-B3D5-4BB9-885E-94FE64049D5F}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="streaming"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\manifest loop\streaming\Data Conversion"
                  componentClassID="DTSTransform.DataConvert.3"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\manifest loop\streaming\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\manifest loop\streaming\Data Conversion.Inputs[Data Conversion Input].Columns[XMLData]"
                          cachedDataType="wstr"
                          cachedLength="2000"
                          cachedName="XMLData"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[XMLData]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\manifest loop\streaming\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of xmlData]"
                          codePage="65001"
                          dataType="text"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of xmlData]"
                          name="Copy of xmlData"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[XMLData]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\manifest loop\streaming\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\manifest loop\streaming\manifest file destination"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="manifest file destination">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\manifest loop\streaming\manifest file destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Manifest]"
                      connectionManagerRefId="Package.ConnectionManagers[Manifest]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\manifest loop\streaming\manifest file destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\manifest loop\streaming\manifest file destination.Inputs[Flat File Destination Input].Columns[Copy of xmlData]"
                          cachedCodepage="65001"
                          cachedDataType="text"
                          cachedName="Copy of xmlData"
                          externalMetadataColumnId="Package\manifest loop\streaming\manifest file destination.Inputs[Flat File Destination Input].ExternalColumns[xmlData]"
                          lineageId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of xmlData]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\manifest loop\streaming\manifest file destination.Inputs[Flat File Destination Input].ExternalColumns[xmlData]"
                          dataType="nText"
                          name="xmlData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\manifest loop\streaming\manifest Source"
                  componentClassID="DTSAdapter.OLEDBSource.3"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="manifest Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">declare @ID int = ?,
	@AccountGuidstr varchar(50) = ?,
	@AccountGuid uniqueidentifier

select @AccountGuid = @AccountGuidstr


set nocount on
set transaction isolation level read uncommitted

;with records 
as
(
/************************************************************************************************************************************************
HEADER
**********************************************************************************************************************************************/
select cast('&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;manifest identifier="Discovery_Education_' + cast(@ID as nvarchar(3)) + '"
xmlns="http://www.imsglobal.org/xsd/imsccv1p2/imscp_v1p1"
xmlns:lom="http://ltsc.ieee.org/xsd/imsccv1p2/LOM/resource"
xmlns:lomimscc="http://ltsc.ieee.org/xsd/imsccv1p2/LOM/manifest"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:csm="http://www.imsglobal.org/xsd/imsccv1p2/imscsmd_v1p0"
xsi:schemaLocation="http://www.imsglobal.org/xsd/imsccv1p2/imscp_v1p1 http://www.imsglobal.org/profile/cc/ccv1p2/ccv1p2_imscp_v1p2_v1p0.xsd 
					http://ltsc.ieee.org/xsd/imsccv1p2/LOM/resource http://www.imsglobal.org/profile/cc/ccv1p2/LOM/ccv1p2_lomresource_v1p0.xsd 
					http://ltsc.ieee.org/xsd/imsccv1p2/LOM/manifest http://www.imsglobal.org/profile/cc/ccv1p2/LOM/ccv1p2_lommanifest_v1p0.xsd
					http://www.imsglobal.org/xsd/imsccv1p2/imscsmd_v1p0 http://www.imsglobal.org/profile/cc/ccv1p2/ccv1p2_imscsmd_v1p0.xsd"&gt;
   &lt;metadata&gt;
    &lt;schema&gt;IMS Common Cartridge&lt;/schema&gt;
    &lt;schemaversion&gt;1.2.0&lt;/schemaversion&gt;
    &lt;lomimscc:lom&gt;
      &lt;lomimscc:general&gt;
        &lt;lomimscc:title&gt;
          &lt;lomimscc:string language="en-US"&gt;Common Cartridge&lt;/lomimscc:string&gt;
        &lt;/lomimscc:title&gt;
        &lt;lomimscc:description&gt;
          &lt;lomimscc:string language="en-US"&gt;One of several Manifests&lt;/lomimscc:string&gt;
        &lt;/lomimscc:description&gt;
        &lt;lomimscc:keyword&gt;
          &lt;lomimscc:string language="en-US"&gt;Streaming&lt;/lomimscc:string&gt;
        &lt;/lomimscc:keyword&gt;
      &lt;/lomimscc:general&gt;
    &lt;/lomimscc:lom&gt;
  &lt;/metadata&gt;
  &lt;organizations&gt;
    &lt;organization identifier="LC_CCB_ORG_0" structure="rooted-hierarchy"&gt;
		&lt;item identifier="I_1"&gt;' as nvarchar(max)) as xmlData, 'a' + cast(0 as nvarchar(10)) + 'a' as orderNumber

/************************************************************************************************************************************************
Items
**********************************************************************************************************************************************/
union all select cast(
'			&lt;item identifier="' + 'I_' + replicate('0', 6 - len(Id)) + cast(Id as nvarchar(6)) + '" identifierref="I_' + replicate('0', 6 - len(Id)) + cast(Id as nvarchar(6)) + '_R"&gt;
				&lt;title&gt;' + replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(
		  cast(isnull(title,title_description) as nvarchar(2000)),'&lt;i&gt;',''),'&lt;/i&gt;',''),'&amp;',' and '),'&lt;',''),'&gt;',''),'/',''),(CHAR(13)+CHAR(10)),''),'&amp;','and'),'&lt;br&gt;',''),'&lt;i/&gt;',''),'&lt;?i&gt;','') + '&lt;/title&gt;'  as nvarchar(max)) as xmlData, 'a' + cast(id as nvarchar(10)) + 'b' as orderNumber 
from workdb.dbo.CommonCartridge
where  batchid = @ID
	and AccountGuid = @AccountGuid

/************************************************************************************************************************************************
Keyword open tags
**********************************************************************************************************************************************/
union all select cast('				&lt;metadata&gt;
					&lt;lomimscc:lom&gt;				
						&lt;lomimscc:classification&gt;
							&lt;lomimscc:keyword&gt;' as nvarchar(max)), 'a' + cast(id as nvarchar(10)) + 'c' as orderNumber
from workdb.dbo.CommonCartridge
where  batchid = @ID and Keywords != ''
	and AccountGuid = @AccountGuid

/************************************************************************************************************************************************
Keywords
**********************************************************************************************************************************************/
union all select '								&lt;lomimscc:string language="en-US"&gt;' + isnull(rtrim(ltrim(Items.Item)),'') + '&lt;/lomimscc:string&gt;' as keywords, 'a' + cast(id as nvarchar(10)) + 'd' as orderNumber
from workdb.dbo.CommonCartridge cc
cross apply (SELECT Item = y.i.value('(./text())[1]', 'nvarchar(4000)')
      FROM 
      ( 
        SELECT x = CONVERT(XML, '&lt;i&gt;' 
          + REPLACE(replace(replace(replace(replace(replace(replace(Keywords,'&lt;i&gt;',''),'&lt;/i&gt;',''),'&amp;',' and '),'&lt;',''),'&gt;',''),(CHAR(13)+CHAR(10)),''), ',', '&lt;/i&gt;&lt;i&gt;') + '&lt;/i&gt;').query('.')
      ) AS a CROSS APPLY x.nodes('i') AS y(i) ) as items
where  batchid = @ID and Keywords != ''
	and AccountGuid = @AccountGuid


/************************************************************************************************************************************************
Keyword close tags
**********************************************************************************************************************************************/
union all select '							&lt;/lomimscc:keyword&gt;					
						&lt;/lomimscc:classification&gt;
					&lt;/lomimscc:lom&gt;
				&lt;/metadata&gt;', 'a' + cast(id as nvarchar(10)) + 'e'  as orderNumber
from workdb.dbo.CommonCartridge
where  batchid = @ID and Keywords != ''
	and AccountGuid = @AccountGuid

/************************************************************************************************************************************************
Item close tags
**********************************************************************************************************************************************/
union all select '			&lt;/item&gt;', 'a' + cast(id as nvarchar(10)) + 'f'  as orderNumber
from workdb.dbo.CommonCartridge
where  batchid = @ID
	and AccountGuid = @AccountGuid

/************************************************************************************************************************************************
Organization Close tags
**********************************************************************************************************************************************/

union all select cast('		&lt;/item&gt;
    &lt;/organization&gt;
  &lt;/organizations&gt;
  &lt;resources&gt;' as nvarchar(max)) as xmlData, 'b' + cast(0 as nvarchar(10)) + 'a' as orderNumber

/************************************************************************************************************************************************
resources
**********************************************************************************************************************************************/

union all select cast(('	&lt;resource identifier="I_' + replicate('0', 6 - len(Id)) + cast(Id as nvarchar(6)) + '_R"  type="imsbasiclti_xmlv1p0"&gt;
		&lt;metadata&gt;') as nvarchar(max)) as xmlData, 'b' + cast(Id as nvarchar(10)) + 'b' as orderNumber
from workdb.dbo.CommonCartridge
where  batchid = @ID
	and AccountGuid = @AccountGuid



union all select cast(('			&lt;lom:lom&gt;
				&lt;lom:educational&gt;
					&lt;lom:intendedEndUserRole&gt;
						&lt;lom:source&gt;IMSGLC_CC_Rolesv1p2&lt;/lom:source&gt;
						&lt;lom:value&gt;' + case when md.blnStudentAccess = 0 then 'Instructor' else 'Learner' end + '&lt;/lom:value&gt;
					&lt;/lom:intendedEndUserRole&gt;
				&lt;/lom:educational&gt;
			&lt;/lom:lom&gt;') as nvarchar(max)) as xmlData,  'b' + cast(Id as nvarchar(10)) + 'c' as orderNumber
from workdb.dbo.CommonCartridge cc
join AllProductAssets.dbo.tblAssetMetaData md on cc.guidAssetId = md.guidAssetMetaDataId
where  batchid = @ID
	and AccountGuid = @AccountGuid



/************************************************************************************************************************************************
resource file and subject open
**********************************************************************************************************************************************/

union all select cast('		&lt;/metadata&gt;
		&lt;file href="BasicLTI/' + replicate('0', 6 - len(Id)) + cast(Id as nvarchar(6)) + '.xml"&gt;
			&lt;metadata&gt;
				&lt;lomimscc:lom&gt;			
					&lt;lomimscc:general&gt;
						&lt;lomimscc:keyword&gt;'as nvarchar(max)), 'b' + cast(id as nvarchar(10)) + 'g' as orderNumber 
from workdb.dbo.CommonCartridge
where  batchid = @ID
	and AccountGuid = @AccountGuid

/************************************************************************************************************************************************
Subjects
**********************************************************************************************************************************************/
union all select distinct cast('							&lt;lomimscc:string language="en-US"&gt;' + case when e.Name in ('T4 ROOT','Common Core') then d.Name else 
replace(replace(replace(replace(e.Name,' S&amp;S',''),' Elementary',''),' Middle School',''),' Techbook','') end + '&lt;/lomimscc:string&gt;' as nvarchar(max)),
'b' + cast(a.id as nvarchar(10)) + 'h' 
from workdb.dbo.CommonCartridge a
join AllProductAssets.dbo.tblXREF_assetTaxonomyIndex b on a.guidAssetId = b.guidAssetId
join AllProductAssets.dbo.tblTaxonomyTreeData c on b.guidtaxid = c.guidTaxId 
join AllProductAssets.dbo.tblTaxonomyTreeData d on c.guidLevelOneId = d.guidTaxId 
join AllProductAssets.dbo.tblTaxonomyTreeData e on d.guidParentId = e.guidTaxId
where  batchid = @ID
	and AccountGuid = @AccountGuid

/************************************************************************************************************************************************
format, copyright, close resource
**********************************************************************************************************************************************/
union all select distinct cast('						&lt;/lomimscc:keyword&gt;
					&lt;/lomimscc:general&gt;
					&lt;lomimscc:technical&gt;
						&lt;lomimscc:format&gt;' + isnull(AssetType,'') + '&lt;/lomimscc:format&gt;
					&lt;/lomimscc:technical&gt;
					&lt;lomimscc:rights&gt;
						&lt;lomimscc:description&gt;
							&lt;lomimscc:string&gt; language="en-US"' + isnull(cast(Copyright as nvarchar(4)),'') + '&lt;/lomimscc:string&gt;
						&lt;/lomimscc:description&gt;
					&lt;/lomimscc:rights&gt;					
				&lt;/lomimscc:lom&gt;
			&lt;/metadata&gt;
		&lt;/file&gt;
	&lt;/resource&gt;' as nvarchar(max)) as xmlData, 'b' + cast(Id as nvarchar(10)) + 'i' as orderNumber
from workdb.dbo.CommonCartridge
where  batchid = @ID
	and AccountGuid = @AccountGuid

/************************************************************************************************************************************************
resources Close tags
**********************************************************************************************************************************************/

union all  select cast('  &lt;/resources&gt;
&lt;/manifest&gt;'  as nvarchar(max)) as xmlData, 'c' + cast(0 as nvarchar(10)) + 'a' as orderNumber

)

select 
cast(xmlData as nvarchar(max)) as xmlData
from records 
order by orderNumber asc

--select top 100 * from dbo.commoncartridge</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::SQLManifestSource</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{CAF9C4AF-D0F8-40DC-8D58-0872D4D8204D};"Parameter1:Input",{5CCEF512-8256-459B-9747-E15272B11C88};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\manifest loop\streaming\manifest Source.Connections[OleDbConnection]"
                      connectionManagerID="{38AD5756-0F00-4B01-8036-A146C1A9BD02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[mn-de-wsql-p4 Workdb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[GroupID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[GroupID]"
                          length="50"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[GroupID]"
                          name="GroupID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[SubGroupID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[SubGroupID]"
                          length="50"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[SubGroupID]"
                          name="SubGroupID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[ResourceID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[ResourceID]"
                          length="6"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[ResourceID]"
                          name="ResourceID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[XMLData]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[XMLData]"
                          length="2000"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].Columns[XMLData]"
                          name="XMLData"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[GroupID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="GroupID" />
                        <externalMetadataColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[SubGroupID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SubGroupID" />
                        <externalMetadataColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[ResourceID]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          name="ResourceID" />
                        <externalMetadataColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output].ExternalColumns[XMLData]"
                          dataType="wstr"
                          length="2000"
                          name="XMLData" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[GroupID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[GroupID]"
                          name="GroupID" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[SubGroupID]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[SubGroupID]"
                          name="SubGroupID" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[ResourceID]"
                          codePage="1252"
                          dataType="str"
                          length="6"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[ResourceID]"
                          name="ResourceID" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[XMLData]"
                          dataType="wstr"
                          length="2000"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[XMLData]"
                          name="XMLData" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\manifest loop\streaming.Paths[Data Conversion Output]"
                  endId="Package\manifest loop\streaming\manifest file destination.Inputs[Flat File Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\manifest loop\streaming\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\manifest loop\streaming.Paths[OLE DB Source Output]"
                  endId="Package\manifest loop\streaming\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\manifest loop\streaming\manifest Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\populate workdb CommonCartridge"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1B731EB8-6DBA-4CFB-B683-19478CAC84AC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="populate workdb CommonCartridge"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{38AD5756-0F00-4B01-8036-A146C1A9BD02}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="use workdb;&#xA;&#xA;declare &#xA;&#x9;@thumbnailTemplate varchar(100) = 'https://images.discoveryeducation.com/thumbnails/[ASSETGUID]-small',&#xA;&#x9;@iconTemplate varchar(100) = 'https://static.discoveryeducation.com/icon/byguid/mid/[ASSETTYPEGUID].png', &#xA;&#x9;@MediaGroups varchar(100) = ?,&#xA;&#x9;@AccountGuid uniqueidentifier = ?&#xA;&#xA;select @MediaGroups = ',' + @MediaGroups + ','&#xA;&#xA;;with &#xA;&#x9;cteDistinct (AccountGuid, guidAssetID) as (&#xA;&#x9;&#x9;select distinct&#xA;&#x9;&#x9;&#x9;AccountGuid = @AccountGuid,&#xA;&#x9;&#x9;&#x9;guidAssetID = MGA.guidAssetID&#xA;&#x9;&#x9;&#x9;from &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AllProductAssets.dbo.Media_Groups MG&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;AllProductAssets.dbo.Media_Group_Asset MGA on MG.Media_group_Id = MGA.Media_Group_Id&#xA;&#x9;&#x9;&#x9;where&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;@MediaGroups like '%,' + convert(varchar, MG.media_group_id) + ',%'&#xA;&#x9;),&#xA;&#x9;cteAssetDetail (AccountGuid, guidAssetID, Title, Title_Description, thumbnail_url, Keywords, Language_Code, Copyright, AssetType) as (&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;AccountGuid&#x9;&#x9;&#x9;= @AccountGuid,&#xA;&#x9;&#x9;&#x9;guidAssetID&#x9;&#x9;&#x9;= A.guidAssetId,&#xA;&#x9;&#x9;&#x9;Title&#x9;&#x9;&#x9;&#x9;= dbo.fnCommonCartridge_CleanString(convert(nvarchar(500), isnull(AMD.title, ''))),&#xA;&#x9;&#x9;&#x9;Title_Description&#x9;= dbo.fnCommonCartridge_CleanString(convert(nvarchar(2000), isnull(AMD.title_description, ''))),&#xA;&#x9;&#x9;&#x9;thumbnail_url&#x9;&#x9;= convert(varchar(1355), &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when exists (select top 1 1 from AllProductAssets.dbo.THUMBNAIL T where A.guidAssetID = T.asset_tax_guid)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then replace(@thumbnailTemplate, '[ASSETGUID]', lower(convert(varchar(50), A.guidAssetId)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else replace(@iconTemplate, '[ASSETTYPEGUID]', convert(varchar(36), A.guidAssetTypeID))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;Keywords&#x9;&#x9;&#x9;= dbo.fnCommonCartridge_CleanString(convert(varchar(2000),isnull(AMD.Keywords, ''))),&#xA;&#x9;&#x9;&#x9;Language_Code&#x9;&#x9;= convert(varchar(3), isnull(AMD.Language_Code, '')),&#xA;&#x9;&#x9;&#x9;Copyright&#x9;&#x9;&#x9;= convert(int, AMD.Copyright),&#xA;&#x9;&#x9;&#x9;AssetType&#x9;&#x9;&#x9;= convert(varchar(100), AT.strFriendlyAssettype)&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;from &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cteDistinct D&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;AllProductAssets.dbo.tblAssets A on D.guidAssetID = A.guidAssetId&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;AllProductAssets.dbo.tblAssetTypes AT on A.guidAssetTypeID = AT.guidAssetTypeID&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;AllProductAssets.dbo.tblAssetMetaData AMD on A.guidAssetId = AMD.guidAssetMetaDataId&#xA;&#x9;&#x9;&#x9;where&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AT.blnSearchable = 1&#xA;&#x9;&#x9;&#x9;&#x9;and AMD.[status] = 1&#xA;&#x9;),&#xA;&#x9;cteAudience (AccountGuid, guidAssetID, legacy_idFrom, legacy_idTo) as (&#xA;&#x9;&#x9;select &#xA;&#x9;&#x9;&#x9;AccountGuid&#x9;&#x9;= D.AccountGuid,&#xA;&#x9;&#x9;&#x9;guidAssetID&#x9;&#x9;= D.guidAssetID,&#xA;&#x9;&#x9;&#x9;legacy_idFrom&#x9;= min(AU.legacy_id),&#xA;&#x9;&#x9;&#x9;legacy_idTo&#x9;&#x9;= max(AU.legacy_id)&#xA;&#x9;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cteDistinct D &#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;AllProductAssets.dbo.AudienceAsset AA on D.guidAssetID = AA.AssetGuid&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;AllProductAssets.dbo.Audience AU on AA.AudienceGuid = AU.AudienceGuid&#xA;&#x9;&#x9;&#x9;group by&#xA;&#x9;&#x9;&#x9;&#x9;D.AccountGuid,&#xA;&#x9;&#x9;&#x9;&#x9;D.guidAssetID&#xA;&#x9;),&#xA;&#x9;cteRecords (AccountGuid, guidAssetID, Title, Title_Description, thumbnail_url, Keywords, Language_Code, Copyright, AssetType, GradeFrom, GradeTo, BinaryChecksum) as (&#xA;&#x9;&#x9;select &#xA;&#x9;&#x9;&#x9;A.AccountGuid,&#xA;&#x9;&#x9;&#x9;A.guidAssetID,&#xA;&#x9;&#x9;&#x9;A.Title,&#xA;&#x9;&#x9;&#x9;A.Title_Description,&#xA;&#x9;&#x9;&#x9;A.thumbnail_url,&#xA;&#x9;&#x9;&#x9;A.Keywords,&#xA;&#x9;&#x9;&#x9;A.Language_Code,&#xA;&#x9;&#x9;&#x9;A.Copyright,&#xA;&#x9;&#x9;&#x9;A.AssetType, &#xA;&#x9;&#x9;&#x9;GradeFrom&#x9;= convert(varchar(2), isnull(case when AU1.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU1.displayName end, 'K')),&#xA;&#x9;&#x9;&#x9;GradeTo&#x9;&#x9;= convert(varchar(2), isnull(case when AU2.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU2.displayName end, '12')),&#xA;&#x9;&#x9;&#x9;--GradeFrom&#x9;= convert(varchar(2), case when AU1.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU1.displayName end),&#xA;&#x9;&#x9;&#x9;--GradeTo&#x9;&#x9;= convert(varchar(2), case when AU2.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU2.displayName end),&#xA;&#x9;&#x9;&#x9;BinaryChecksum = binary_checksum(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.AccountGuid,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.guidAssetID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.Title,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.Title_Description,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.thumbnail_url,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.Keywords,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.Language_Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.Copyright,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;A.AssetType,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;convert(varchar(2), isnull(case when AU1.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU1.displayName end, 'K')),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;convert(varchar(2), isnull(case when AU2.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU2.displayName end, '12'))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--convert(varchar(2), case when AU1.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU1.displayName end),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--convert(varchar(2), case when AU2.gradeBand in ('Educator', 'Post-Secondary') then 'a' else AU2.displayName end)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;from&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cteAssetDetail A&#xA;&#x9;&#x9;&#x9;&#x9;left join&#x9;cteAudience AU on A.AccountGuid = AU.AccountGuid and A.guidAssetID = AU.guidAssetID&#xA;&#x9;&#x9;&#x9;&#x9;left join&#x9;AllProductAssets.dbo.Audience AU1 on AU.legacy_idFrom = AU1.legacy_id&#xA;&#x9;&#x9;&#x9;&#x9;left join&#x9;AllProductAssets.dbo.Audience AU2 on AU.legacy_idTo = AU2.legacy_id&#xA;&#x9;)&#xA;&#xA;&#x9;merge &#xA;&#x9;&#x9;Workdb.dbo.CommonCartridge as target&#xA;&#xA;&#x9;using &#xA;&#x9;&#x9;cteRecords as source&#xA;&#x9;&#x9;&#x9;on&#x9;target.AccountGuid = source.AccountGuid&#xA;&#x9;&#x9;&#x9;and&#x9;target.guidAssetId = source.guidAssetId &#x9;&#x9;&#x9;&#xA;&#xA;&#x9;when matched and target.BinaryChecksum != source.BinaryChecksum then&#xA;&#x9;&#x9;update&#xA;&#x9;&#x9;&#x9;SET target.[title]&#x9;&#x9;&#x9;&#x9;= source.[title],&#xA;&#x9;&#x9;&#x9;&#x9;target.[title_description]&#x9;= source.[title_description],&#xA;&#x9;&#x9;&#x9;&#x9;target.thumbnail_url&#x9;&#x9;= source.thumbnail_url,&#xA;&#x9;&#x9;&#x9;&#x9;target.Keywords&#x9;&#x9;&#x9;&#x9;= source.Keywords,&#xA;&#x9;&#x9;&#x9;&#x9;target.Language_code&#x9;&#x9;= source.Language_code,&#xA;&#x9;&#x9;&#x9;&#x9;target.Copyright&#x9;&#x9;&#x9;= source.Copyright,&#xA;&#x9;&#x9;&#x9;&#x9;target.AssetType&#x9;&#x9;&#x9;= source.AssetType,&#xA;&#x9;&#x9;&#x9;&#x9;target.GradeFrom&#x9;&#x9;&#x9;= source.GradeFrom,&#xA;&#x9;&#x9;&#x9;&#x9;target.GradeTo&#x9;&#x9;&#x9;&#x9;= source.GradeTo,&#xA;&#x9;&#x9;&#x9;&#x9;target.IsActive&#x9;&#x9;&#x9;&#x9;= 1&#xA;&#xA;&#x9;when not matched by target then&#xA;&#x9;&#x9;insert&#x9;(AccountGuid, guidAssetId, [title], [title_description], thumbnail_url, Keywords, Language_code, Copyright, AssetType, GradeFrom, GradeTo, IsActive, id)&#x9;&#xA;&#x9;&#x9;values&#x9;(AccountGuid, guidAssetId, [title], [title_description], thumbnail_url, Keywords, Language_code, Copyright, AssetType, GradeFrom, GradeTo, 1, -1)&#x9; &#xA;&#xA;&#x9;when not matched by source then&#xA;&#x9;&#x9;update&#xA;&#x9;&#x9;&#x9;set target.IsActive = 0;&#xA;&#xA;if exists (select top 1 1 from dbo.CommonCartridge where id = -1 and AccountGuid = @AccountGuid) begin&#xA;&#x9;declare @MaxID int&#xA;&#x9;select @MaxID = max(id) from dbo.CommonCartridge where AccountGuid = @AccountGuid&#xA;&#xA;&#x9;if @MaxID = -1&#xA;&#x9;&#x9;select @MaxID = 0&#xA;&#xA;&#x9;;with RowNumber (AccountGuid, guidAssetId, id) as (&#xA;&#x9;&#x9;select &#xA;&#x9;&#x9;&#x9;AccountGuid,&#xA;&#x9;&#x9;&#x9;guidAssetId,&#xA;&#x9;&#x9;&#x9;id = row_number() over (partition by AccountGuid order by guidAssetId) + @MaxID&#xA;&#x9;&#x9;&#x9;from dbo.CommonCartridge CC&#xA;&#x9;&#x9;&#x9;where&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CC.AccountGuid = @AccountGuid&#xA;&#x9;&#x9;&#x9;&#x9;and&#x9;CC.id = -1&#xA;&#x9;)&#xA;&#x9;&#x9;update CC&#xA;&#x9;&#x9;&#x9;set CC.id = RN.id&#xA;&#x9;&#x9;&#x9;from dbo.CommonCartridge CC&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;RowNumber RN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;on&#x9;CC.AccountGuid = RN.AccountGuid&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and&#x9;CC.guidAssetId = RN.guidAssetId&#xA;&#xA;end&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::MediaGroups"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::AccountGuid"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\reset vId"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Expression Task"
      DTS:DTSID="{E8BBD71A-E201-4086-A767-3D3D6A5CF4FC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="reset vId"
      DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::vFolderID] = 0" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\zip folders loop"
      DTS:AssignExpression="@vFolderID = @vFolderID + 1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{9961BE3C-D4E1-45B4-8728-5BB7C5DBFC32}"
      DTS:EvalExpression="@vFolderID &lt;= @vMaxID"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="zip folders loop">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\zip folders loop\create cartridges"
          DTS:CreationName="CozyRoc.SqlServer.SSIS.ZipTask, CozyRoc.SSISPlus.2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea"
          DTS:Description="Zip Task"
          DTS:DTSID="{F10B6A69-5E8F-4071-8AE5-6BBCDBFAADDE}"
          DTS:ExecutableType="CozyRoc.SqlServer.SSIS.ZipTask, CozyRoc.SSISPlus.2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=16cf490bb80c34ea"
          DTS:LocaleID="-1"
          DTS:ObjectName="create cartridges"
          DTS:TaskContact="Zip Task; COZYROC LLC; SSIS+; (c) 2006-2014 COZYROC LLC; All Rights Reserved;http://www.cozyroc.com/;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ZipData
              Version="1"
              StopOnFailure="True"
              Action="Compress"
              CompressionType="Zip"
              CompressionLevel="Super fast"
              EncryptionType="Zip2"
              IsSourceVariable="False"
              Source="zip file source"
              IncludeSubfolders="True"
              RemoveSource="False"
              IsTargetVariable="False"
              Target="zip file destination"
              OverwriteExisting="False" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{B4B455FD-93FC-436F-A44C-10E612BC8C5B}"
      DTS:From="Package\populate workdb CommonCartridge"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\calculate number of batches" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{13523320-2693-4289-8C4A-E2B77802901F}"
      DTS:From="Package\Create Cartridges"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\manifest loop" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{C55CD8E0-648E-4189-82DC-C3A102E0D0A4}"
      DTS:From="Package\calculate number of batches"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\directory loop" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{8AB8036D-CA8B-4052-892E-BB28BE101C74}"
      DTS:From="Package\reset vId"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\zip folders loop" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{217096F2-A2D8-4476-9761-244D28501F95}"
      DTS:Expression="@[User::vProduct] == &quot;Streaming&quot;"
      DTS:From="Package\directory loop"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Create Cartridges" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{A4326534-AE84-4AA5-8DC0-D2BFEC2B667B}"
      DTS:From="Package\manifest loop"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\reset vId" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="213,42"
          Id="Package\calculate number of batches"
          TopLeft="188,145" />
        <NodeLayout
          Size="163,42"
          Id="Package\Create Cartridges"
          TopLeft="201.5,362.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\directory loop\verify directory exists"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="170,59"
          Size="170,102"
          Id="Package\directory loop"
          TopLeft="206,216" />
        <NodeLayout
          Size="127,42"
          Id="Package\manifest loop\streaming"
          TopLeft="48,21" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="236,118"
          Size="236,161"
          Id="Package\manifest loop"
          TopLeft="165,432" />
        <NodeLayout
          Size="248,42"
          Id="Package\populate workdb CommonCartridge"
          TopLeft="125,60" />
        <NodeLayout
          Size="122,42"
          Id="Package\reset vId"
          TopLeft="440,489" />
        <NodeLayout
          Size="120,42"
          Id="Package\zip folders loop\create cartridges"
          TopLeft="37.5,9.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="206,76"
          Size="206,119"
          Id="Package\zip folders loop"
          TopLeft="614,456" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="249,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.5,43"
              Start="0,0"
              End="45.5,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5"
                    Point2="0,21.5"
                    Point3="4,21.5" />
                  <mssgle:LineSegment
                    End="41.5,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="41.5,21.5"
                    Point2="45.5,21.5"
                    Point3="45.5,25.5" />
                  <mssgle:LineSegment
                    End="45.5,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="283,404.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.5"
              Start="0,0"
              End="0,20">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="292.75,187">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="562,512.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52,0"
              Start="0,0"
              End="44.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="291,318">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8,44.5"
              Start="0,0"
              End="-8,37">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.25"
                    Point2="0,22.25"
                    Point3="-4,22.25" />
                  <mssgle:LineSegment
                    End="-4,22.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-4,22.25"
                    Point2="-8,22.25"
                    Point3="-8,26.25" />
                  <mssgle:LineSegment
                    End="-8,37" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="401,511.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39,0"
              Start="0,0"
              End="31.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Create Cartridges">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Create Cartridges\Script Component"
          TopLeft="681,262" />
        <NodeLayout
          Size="156,42"
          Id="Package\Create Cartridges\resource Source"
          TopLeft="659,135" />
        <EdgeLayout
          Id="Package\Create Cartridges.Paths[OLE DB Source Output]"
          TopLeft="737,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26.5,85"
              Start="0,0"
              End="26.5,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,38.5"
                    Point2="0,42.5"
                    Point3="4,42.5" />
                  <mssgle:LineSegment
                    End="22.5,42.5" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,42.5"
                    Point2="26.5,42.5"
                    Point3="26.5,46.5" />
                  <mssgle:LineSegment
                    End="26.5,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create Cartridges\resource Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\manifest loop\streaming">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="192,42"
          Id="Package\manifest loop\streaming\manifest file destination"
          TopLeft="655,300" />
        <NodeLayout
          Size="157,42"
          Id="Package\manifest loop\streaming\manifest Source"
          TopLeft="667,73" />
        <NodeLayout
          Size="157,42"
          Id="Package\manifest loop\streaming\Data Conversion"
          TopLeft="669,187" />
        <EdgeLayout
          Id="Package\manifest loop\streaming.Paths[OLE DB Source Output]"
          TopLeft="746.5,115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\manifest loop\streaming.Paths[Data Conversion Output]"
          TopLeft="749.25,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71"
              Start="0,0"
              End="0,63.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\manifest loop\streaming\manifest Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>