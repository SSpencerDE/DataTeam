<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/13/2017 10:53:21 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="CHCL306944"
  DTS:CreatorName="US\tgeer"
  DTS:DTSID="{4F7CF34E-F405-4BE7-A737-189D6ECAD386}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="14.0.0800.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="DeleteUserPII"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="154"
  DTS:VersionGUID="{2444D7A8-1795-4CBC-8F3B-3C53A5BA4E47}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{7E49FBAF-6B20-4BDC-8E08-D54087152A68}"
      DTS:ObjectName="NumberOfUsersBatchSize">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66750685-7C5E-4564-AD9A-9B96E20918C4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessage">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B010A1E-350E-438F-B69C-D33BB23D6CF8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutionID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BFB1711F-662D-47D7-A2A2-C910B5F6C277}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="MaskedDateOfBirth">
      <DTS:VariableValue
        DTS:DataType="7">2/17/2017 4:01:42 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF4A767F-12CE-44D4-B64A-35FBE84ACC08}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MaskedEmail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4974D2B4-63EC-45C8-B354-A8B15A8222F5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MaskedFirstName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F4FFD437-1408-47C8-BE2C-A2CC2D081D3E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MaskedLastName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{140F9F54-0683-4A1D-B382-BDB37B3D8912}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MaskedUID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41057FA1-1CBF-420F-9249-052E6A39366B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::NumberOfUsersBatchSize]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NumberOfUsersBatchSize">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{94279125-1D13-409A-A17A-8590BD459533}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="PIIRestoreDuration">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AFDCF48-017C-4990-9540-2BE39607E1FA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessName">
      <DTS:VariableValue
        DTS:DataType="8">DeleteUserPII</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{756309F4-00FC-4A15-9FE5-5A23D5A96BAA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="QueueStatusToProcess">
      <DTS:VariableValue
        DTS:DataType="8">Deletion Requested</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1178592-FC21-45E5-BD84-AFA990B0B333}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Status">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4D7EDB98-62F7-49A5-8F37-EE724F7F6D9F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="UserGuid">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{639CB57D-9D68-4ECF-981F-AD0EB3F318B3}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UserRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D7D820C3-D456-4C68-B36C-4C270502E061}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UsersToProcess">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\End"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{9BCC2E6A-0B48-4F38-BCC4-707FAE3707EE}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="End">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\End\Complete the Execution"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{41AF70F4-4795-4CBC-9859-0978A9526191}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Complete the Execution"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare @ExecutionID int = ? &#xA;execute process.CompleteExecution @ExecutionID = @ExecutionID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\End\LOG - Ended"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{216BEC57-37A3-4960-9AF2-6E35CF0C84D7}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="LOG - Ended"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare&#xA; @ExecutionID int = ?,&#xA; @LogType varchar(100) = 'Info',&#xA; @Message varchar(max) = 'Ended'&#xA;&#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{23AFD906-D5AA-472A-965E-D3DB32CBA727}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{F9662241-EE91-49A2-9C5B-776142003189}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Identify and Stage the data for the users in this batch"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration"
                  componentClassID="DTSTransform.DerivedColumn.3"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add Execution ID and PIIRestoreDuration"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output].Columns[PIIRestoreDuration]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output].Columns[PIIRestoreDuration]"
                          name="PIIRestoreDuration"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::PIIRestoreDuration]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::PIIRestoreDuration]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields"
                  componentClassID="DTSTransform.Lookup.3"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Add Masked Fields"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">--- This is a dummy call. the real call is in Advanced.
select
	UserGuid			= convert(uniqueidentifier, null),
	MaskedFirstName		= convert(varchar(12), ''),
	MaskedLastName		= convert(varchar(12), ''),
	MaskedUID			= convert(varchar(12), ''),
	MaskedEmail			= convert(varchar(33), ''),
	HarvestedDate		= convert(date, getdate())</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">declare 
	@N1 uniqueidentifier = newid(),
	@N2 uniqueidentifier = newid(),
	@N3 uniqueidentifier = newid(),
	@N4 uniqueidentifier = newid(),
	@N5 uniqueidentifier = newid(),
	@Now date = getdate()

select
	UserGuid			= convert(uniqueidentifier, ?),
	MaskedFirstName		= dbo.fn_MaskWord(?, @N1),
	MaskedLastName		= dbo.fn_MaskWord(?, @N2),
	MaskedUID			= dbo.fn_MaskWord(?, @N3),
	MaskedEmail			= dbo.fn_MaskEmail(?, @N4, @N5),
	HarvestedDate		= @Now</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="UserGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MaskedFirstName" dataType="DT_STR" length="12" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MaskedLastName" dataType="DT_STR" length="12" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MaskedUID" dataType="DT_STR" length="12" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MaskedEmail" dataType="DT_STR" length="33" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="HarvestedDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FIRST_NAME]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_LAST_NAME]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_UID]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EMAIL]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">UserGuid</property>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">UserGuid</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input].Columns[APP_USER_LAST_NAME]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_LAST_NAME"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_LAST_NAME]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedLastName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input].Columns[APP_USER_FIRST_NAME]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_FIRST_NAME"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FIRST_NAME]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedFirstName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input].Columns[APP_USER_EMAIL]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_EMAIL"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EMAIL]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedEmail</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input].Columns[APP_USER_UID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_UID"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_UID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedUID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedFirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedFirstName]"
                          name="MaskedFirstName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedFirstName</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedLastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedLastName]"
                          name="MaskedLastName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedLastName</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedUID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedUID]"
                          name="MaskedUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedUID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedEmail]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="33"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedEmail]"
                          name="MaskedEmail"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedEmail</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC"
                  componentClassID="DTSTransform.Lookup.3"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Fetch the PII from EDU_SEC"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select 
	UserGuid							= AU.APP_USER_GUID,
	HarvestDate							= convert(date, getdate()),
	APP_USER_LAST_NAME					= AU.LAST_NAME,
	APP_USER_FIRST_NAME					= AU.FIRST_NAME,
	APP_USER_MIDDLE_NAME				= AU.MIDDLE_NAME,
	APP_USER_EMAIL						= AU.EMAIL,
	APP_USER_PWD						= AU.PWD,
	APP_USER_UID						= AU.[UID],
	APP_USER_SECURITY_QUESTION_ANSWER	= AU.SECURITY_QUESTION_ANSWER,
	APP_USER_SECURITY_QUESTION_GUID		= AU.SECURITY_QUESTION_GUID,
	APP_USER_ADDRESS_GUID				= AU.ADDRESS_GUID,
	APP_USER_ADDRESS1					= AU.ADDRESS1,
	APP_USER_ADDRESS2					= AU.ADDRESS2,
	APP_USER_ADDRESS3					= AU.ADDRESS3,
	APP_USER_MAIN_PHONE					= AU.MAIN_PHONE,
	APP_USER_FAX_PHONE					= AU.FAX_PHONE,
	APP_USER_TITLE						= AU.TITLE,
	APP_USER_ORGANIZATION				= AU.ORGANIZATION,
	APP_USER_ISDELETED					= AU.ISDELETED,
	APP_USER_ARCHIVE_DT					= AU.ARCHIVE_DT,
	APP_USER_EXT_STUDENTID				= AUE.STUDENTID, 
	APP_USER_EXT_TEACHERID				= AUE.TEACHERID,
	APP_USER_EXT_PARENTEMAIL			= AUE.PARENTEMAIL,
	APP_USER_EXT_profileImage			= AUE.profileImage,
	APP_USER_EXT_profileImageId			= AUE.profileImageId,
	AppUserLoginProvider_ssoUsername	= AULP.ssoUsername,
	AppUserLoginProvider_ssoPassword	= AULP.ssoPassword

	from 
					edu_sec.dbo.APP_USER AU 
		left join	edu_sec.dbo.APP_USER_EXT AUE on AU.APP_USER_GUID = AUE.APP_USER_GUID
		left join	edu_sec.dbo.AppUserLoginProvider AULP on AU.APP_USER_GUID = AULP.appUserguid</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
select 
	UserGuid							= AU.APP_USER_GUID,
	HarvestDate							= convert(date, getdate()),
	APP_USER_LAST_NAME					= AU.LAST_NAME,
	APP_USER_FIRST_NAME					= AU.FIRST_NAME,
	APP_USER_MIDDLE_NAME				= AU.MIDDLE_NAME,
	APP_USER_EMAIL						= AU.EMAIL,
	APP_USER_PWD						= AU.PWD,
	APP_USER_UID						= AU.[UID],
	APP_USER_SECURITY_QUESTION_ANSWER	= AU.SECURITY_QUESTION_ANSWER,
	APP_USER_SECURITY_QUESTION_GUID		= AU.SECURITY_QUESTION_GUID,
	APP_USER_ADDRESS_GUID				= AU.ADDRESS_GUID,
	APP_USER_ADDRESS1					= AU.ADDRESS1,
	APP_USER_ADDRESS2					= AU.ADDRESS2,
	APP_USER_ADDRESS3					= AU.ADDRESS3,
	APP_USER_MAIN_PHONE					= AU.MAIN_PHONE,
	APP_USER_FAX_PHONE					= AU.FAX_PHONE,
	APP_USER_TITLE						= AU.TITLE,
	APP_USER_ORGANIZATION				= AU.ORGANIZATION,
	APP_USER_ISDELETED					= AU.ISDELETED,
	APP_USER_ARCHIVE_DT					= AU.ARCHIVE_DT,
	APP_USER_EXT_STUDENTID				= AUE.STUDENTID, 
	APP_USER_EXT_TEACHERID				= AUE.TEACHERID,
	APP_USER_EXT_PARENTEMAIL			= AUE.PARENTEMAIL,
	APP_USER_EXT_profileImage			= AUE.profileImage,
	APP_USER_EXT_profileImageId			= AUE.profileImageId,
	AppUserLoginProvider_ssoUsername	= AULP.ssoUsername,
	AppUserLoginProvider_ssoPassword	= AULP.ssoPassword

	from 
					edu_sec.dbo.APP_USER AU 
		left join	edu_sec.dbo.APP_USER_EXT AUE on AU.APP_USER_GUID = AUE.APP_USER_GUID
		left join	edu_sec.dbo.AppUserLoginProvider AULP on AU.APP_USER_GUID = AULP.appUserguid
	where AU.APP_USER_GUID = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="UserGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="HarvestDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_LAST_NAME" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_FIRST_NAME" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_MIDDLE_NAME" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_EMAIL" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_PWD" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_UID" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_SECURITY_QUESTION_ANSWER" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_SECURITY_QUESTION_GUID" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_ADDRESS_GUID" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_ADDRESS1" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_ADDRESS2" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_ADDRESS3" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_MAIN_PHONE" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_FAX_PHONE" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_TITLE" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_ORGANIZATION" dataType="DT_WSTR" length="200" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_ISDELETED" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_ARCHIVE_DT" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="APP_USER_EXT_STUDENTID" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_EXT_TEACHERID" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_EXT_PARENTEMAIL" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_EXT_profileImage" dataType="DT_TEXT" length="0" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="APP_USER_EXT_profileImageId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppUserLoginProvider_ssoUsername" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AppUserLoginProvider_ssoPassword" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Connections[OleDbConnection]"
                      connectionManagerID="{AC9A8F07-C374-495F-9AFD-C842F1C66200}:external"
                      connectionManagerRefId="Project.ConnectionManagers[edu_sec]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Inputs[Lookup Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">UserGuid</property>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">UserGuid</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_LAST_NAME]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_LAST_NAME]"
                          name="APP_USER_LAST_NAME"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_LAST_NAME</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FIRST_NAME]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FIRST_NAME]"
                          name="APP_USER_FIRST_NAME"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_FIRST_NAME</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_MIDDLE_NAME]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_MIDDLE_NAME]"
                          name="APP_USER_MIDDLE_NAME"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_MIDDLE_NAME</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EMAIL]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EMAIL]"
                          name="APP_USER_EMAIL"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_EMAIL</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_PWD]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_PWD]"
                          name="APP_USER_PWD"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_PWD</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_UID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_UID]"
                          name="APP_USER_UID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_UID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_SECURITY_QUESTION_ANSWER]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_SECURITY_QUESTION_ANSWER]"
                          name="APP_USER_SECURITY_QUESTION_ANSWER"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_SECURITY_QUESTION_ANSWER</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_SECURITY_QUESTION_GUID]"
                          dataType="guid"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_SECURITY_QUESTION_GUID]"
                          name="APP_USER_SECURITY_QUESTION_GUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_SECURITY_QUESTION_GUID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS_GUID]"
                          dataType="guid"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS_GUID]"
                          name="APP_USER_ADDRESS_GUID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_ADDRESS_GUID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="200"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS1]"
                          name="APP_USER_ADDRESS1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_ADDRESS1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="200"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS2]"
                          name="APP_USER_ADDRESS2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_ADDRESS2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS3]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="200"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS3]"
                          name="APP_USER_ADDRESS3"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_ADDRESS3</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_MAIN_PHONE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="20"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_MAIN_PHONE]"
                          name="APP_USER_MAIN_PHONE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_MAIN_PHONE</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FAX_PHONE]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="20"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FAX_PHONE]"
                          name="APP_USER_FAX_PHONE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_FAX_PHONE</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_TITLE]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="200"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_TITLE]"
                          name="APP_USER_TITLE"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_TITLE</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ORGANIZATION]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="200"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ORGANIZATION]"
                          name="APP_USER_ORGANIZATION"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_ORGANIZATION</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ISDELETED]"
                          dataType="bool"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ISDELETED]"
                          name="APP_USER_ISDELETED"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_ISDELETED</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ARCHIVE_DT]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ARCHIVE_DT]"
                          name="APP_USER_ARCHIVE_DT"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_ARCHIVE_DT</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_STUDENTID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_STUDENTID]"
                          name="APP_USER_EXT_STUDENTID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_EXT_STUDENTID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_TEACHERID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_TEACHERID]"
                          name="APP_USER_EXT_TEACHERID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_EXT_TEACHERID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_PARENTEMAIL]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_PARENTEMAIL]"
                          name="APP_USER_EXT_PARENTEMAIL"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_EXT_PARENTEMAIL</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_profileImage]"
                          codePage="1252"
                          dataType="text"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_profileImage]"
                          name="APP_USER_EXT_profileImage"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_EXT_profileImage</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_profileImageId]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_profileImageId]"
                          name="APP_USER_EXT_profileImageId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">APP_USER_EXT_profileImageId</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[AppUserLoginProvider_ssoUsername]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[AppUserLoginProvider_ssoUsername]"
                          name="AppUserLoginProvider_ssoUsername"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AppUserLoginProvider_ssoUsername</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[AppUserLoginProvider_ssoPassword]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[AppUserLoginProvider_ssoPassword]"
                          name="AppUserLoginProvider_ssoPassword"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">AppUserLoginProvider_ssoPassword</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[HarvestDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[HarvestDate]"
                          name="HarvestDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">HarvestDate</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete"
                  componentClassID="DTSAdapter.OLEDBSource.3"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get a batch of users to Delete"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">declare
@NumberOfUsers int = ?,
@Status varchar(30) = ?

execute dbo.GetUsers @NumberOfUsers, @Status</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{41057FA1-1CBF-420F-9249-052E6A39366B};"Parameter1:Input",{756309F4-00FC-4A15-9FE5-5A23D5A96BAA};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          dataType="guid"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].ExternalColumns[UserGuid]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          name="UserGuid"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].ExternalColumns[UserGuid]"
                          dataType="guid"
                          name="UserGuid" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Error Output].Columns[UserGuid]"
                          dataType="guid"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Error Output].Columns[UserGuid]"
                          name="UserGuid" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user"
                  componentClassID="DTSTransform.OLEDBCommand.3"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Log a warning about this user"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">execute process.WriteLog
@ExecutionID = ?,
@LogType = 'Warning',
@Message = 'Unable to find User PII For this user',
@Data = ?
</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input].ExternalColumns[@Data]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input].Columns[ExecutionID]"
                          cachedDataType="i4"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input].ExternalColumns[@ExecutionID]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input].ExternalColumns[@ExecutionID]"
                          dataType="i4"
                          name="@ExecutionID">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input].ExternalColumns[@Data]"
                          codePage="1252"
                          dataType="text"
                          name="@Data">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">193</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Row Count"
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::UserRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii"
                  componentClassID="DTSAdapter.OLEDBDestination.3"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="stage tempuserpii"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[stage].[TempUserPII]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[UserGuid]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output].Columns[UserGuid]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[PIIRestoreDuration]"
                          cachedDataType="i4"
                          cachedName="PIIRestoreDuration"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[PIIRestoreDuration]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output].Columns[PIIRestoreDuration]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_LAST_NAME]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_LAST_NAME"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_LAST_NAME]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_LAST_NAME]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_FIRST_NAME]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_FIRST_NAME"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_FIRST_NAME]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FIRST_NAME]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_MIDDLE_NAME]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_MIDDLE_NAME"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_MIDDLE_NAME]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_MIDDLE_NAME]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_EMAIL]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_EMAIL"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EMAIL]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EMAIL]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_PWD]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_PWD"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_PWD]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_PWD]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_UID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_UID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_UID]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_UID]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_SECURITY_QUESTION_ANSWER]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_SECURITY_QUESTION_ANSWER"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_SECURITY_QUESTION_ANSWER]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_SECURITY_QUESTION_ANSWER]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_SECURITY_QUESTION_GUID]"
                          cachedDataType="guid"
                          cachedName="APP_USER_SECURITY_QUESTION_GUID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_SECURITY_QUESTION_GUID]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_SECURITY_QUESTION_GUID]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_ADDRESS_GUID]"
                          cachedDataType="guid"
                          cachedName="APP_USER_ADDRESS_GUID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS_GUID]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS_GUID]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_ADDRESS1]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="APP_USER_ADDRESS1"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS1]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS1]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_ADDRESS2]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="APP_USER_ADDRESS2"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS2]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS2]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_ADDRESS3]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="APP_USER_ADDRESS3"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS3]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ADDRESS3]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_MAIN_PHONE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="APP_USER_MAIN_PHONE"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_MAIN_PHONE]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_MAIN_PHONE]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_FAX_PHONE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="APP_USER_FAX_PHONE"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_FAX_PHONE]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_FAX_PHONE]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_TITLE]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="APP_USER_TITLE"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_TITLE]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_TITLE]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_ORGANIZATION]"
                          cachedDataType="wstr"
                          cachedLength="200"
                          cachedName="APP_USER_ORGANIZATION"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ORGANIZATION]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ORGANIZATION]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_ISDELETED]"
                          cachedDataType="bool"
                          cachedName="APP_USER_ISDELETED"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ISDELETED]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ISDELETED]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_ARCHIVE_DT]"
                          cachedDataType="dbTimeStamp"
                          cachedName="APP_USER_ARCHIVE_DT"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ARCHIVE_DT]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_ARCHIVE_DT]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_EXT_STUDENTID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_EXT_STUDENTID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_STUDENTID]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_STUDENTID]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_EXT_TEACHERID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_EXT_TEACHERID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_TEACHERID]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_TEACHERID]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_EXT_PARENTEMAIL]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="APP_USER_EXT_PARENTEMAIL"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_PARENTEMAIL]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_PARENTEMAIL]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_EXT_profileImage]"
                          cachedCodepage="1252"
                          cachedDataType="text"
                          cachedName="APP_USER_EXT_profileImage"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_profileImage]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_profileImage]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[APP_USER_EXT_profileImageId]"
                          cachedDataType="i4"
                          cachedName="APP_USER_EXT_profileImageId"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_profileImageId]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[APP_USER_EXT_profileImageId]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[AppUserLoginProvider_ssoUsername]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AppUserLoginProvider_ssoUsername"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[AppUserLoginProvider_ssoUsername]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[AppUserLoginProvider_ssoUsername]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[AppUserLoginProvider_ssoPassword]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AppUserLoginProvider_ssoPassword"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[AppUserLoginProvider_ssoPassword]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[AppUserLoginProvider_ssoPassword]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[MaskedFirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="MaskedFirstName"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedFirstName]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedFirstName]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[MaskedLastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="MaskedLastName"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedLastName]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedLastName]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[MaskedUID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="MaskedUID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedUID]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedUID]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[MaskedEmail]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="33"
                          cachedName="MaskedEmail"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedEmail]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output].Columns[MaskedEmail]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].Columns[HarvestDate]"
                          cachedDataType="dbDate"
                          cachedName="HarvestDate"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[HarvestedDate]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output].Columns[HarvestDate]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[UserGuid]"
                          dataType="guid"
                          name="UserGuid" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_LAST_NAME]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_LAST_NAME" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_FIRST_NAME]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_FIRST_NAME" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_MIDDLE_NAME]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_MIDDLE_NAME" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EMAIL]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_EMAIL" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_PWD]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_PWD" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_UID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_UID" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_SECURITY_QUESTION_ANSWER]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_SECURITY_QUESTION_ANSWER" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_SECURITY_QUESTION_GUID]"
                          dataType="guid"
                          name="APP_USER_SECURITY_QUESTION_GUID" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS_GUID]"
                          dataType="guid"
                          name="APP_USER_ADDRESS_GUID" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS1]"
                          dataType="wstr"
                          length="200"
                          name="APP_USER_ADDRESS1" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS2]"
                          dataType="wstr"
                          length="200"
                          name="APP_USER_ADDRESS2" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ADDRESS3]"
                          dataType="wstr"
                          length="200"
                          name="APP_USER_ADDRESS3" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_MAIN_PHONE]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="APP_USER_MAIN_PHONE" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_FAX_PHONE]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="APP_USER_FAX_PHONE" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_TITLE]"
                          dataType="wstr"
                          length="200"
                          name="APP_USER_TITLE" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ORGANIZATION]"
                          dataType="wstr"
                          length="200"
                          name="APP_USER_ORGANIZATION" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ISDELETED]"
                          dataType="bool"
                          name="APP_USER_ISDELETED" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_ARCHIVE_DT]"
                          dataType="dbTimeStamp"
                          name="APP_USER_ARCHIVE_DT" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_STUDENTID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_EXT_STUDENTID" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_TEACHERID]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_EXT_TEACHERID" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_PARENTEMAIL]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="APP_USER_EXT_PARENTEMAIL" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_profileImage]"
                          codePage="1252"
                          dataType="text"
                          name="APP_USER_EXT_profileImage" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[APP_USER_EXT_profileImageId]"
                          dataType="i4"
                          name="APP_USER_EXT_profileImageId" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[AppUserLoginProvider_ssoUsername]"
                          dataType="wstr"
                          length="255"
                          name="AppUserLoginProvider_ssoUsername" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[AppUserLoginProvider_ssoPassword]"
                          dataType="wstr"
                          length="255"
                          name="AppUserLoginProvider_ssoPassword" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedFirstName]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="MaskedFirstName" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedLastName]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="MaskedLastName" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedUID]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="MaskedUID" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[MaskedEmail]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="MaskedEmail" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[HarvestedDate]"
                          dataType="dbDate"
                          name="HarvestedDate" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[PIIRestoreDuration]"
                          dataType="i4"
                          name="PIIRestoreDuration" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input].ExternalColumns[DeletionDate]"
                          dataType="dbDate"
                          name="DeletionDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Derived Column Output]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Lookup Match Output]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Lookup Match Output1]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii.Inputs[OLE DB Destination Input]"
                  name="Lookup Match Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Lookup No Match Output]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user.Inputs[OLE DB Command Input]"
                  name="Lookup No Match Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[OLE DB Source Output]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Row Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Row Count Output 1]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration.Inputs[Derived Column Input]"
                  name="Row Count Output 1"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process stage tempUserPII"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3481ED1F-1B06-456C-A7A8-5D5CFAB57249}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process stage tempUserPII"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="execute stage.ProcessTempUserPII @ExecutionID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{d014c8d5-76f3-4907-b1aa-79f07439f984}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process the batch of users one by one"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split"
                  componentClassID="DTSTransform.ConditionalSplit.3"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Inputs[Conditional Split Input].Columns[Status]"
                          cachedDataType="bool"
                          cachedName="Status"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[Status]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Failed]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Failed"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[Status]} ==  FALSE </property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">Status ==  FALSE </property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Succeeded]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Succeeded"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[Status]} ==  TRUE </property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">Status ==  TRUE </property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete"
                  componentClassID="DTSAdapter.OLEDBSource.3"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="dbo_GetUserPIIToDelete"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">declare
@NumberOfUsers int = ?

execute dbo.GetUserPIIToDelete @NumberOfUsers</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"Parameter0:Input",{41057FA1-1CBF-420F-9249-052E6A39366B};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          dataType="guid"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[UserGuid]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          name="UserGuid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedFirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedFirstName]"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedFirstName]"
                          name="MaskedFirstName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedLastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedLastName]"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedLastName]"
                          name="MaskedLastName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedUID]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedUID]"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedUID]"
                          name="MaskedUID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedEmail]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedEmail]"
                          length="50"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedEmail]"
                          name="MaskedEmail"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedDateOfBirth]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedDateOfBirth]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedDateOfBirth]"
                          name="MaskedDateOfBirth"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[UserGuid]"
                          dataType="guid"
                          name="UserGuid" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedFirstName]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="MaskedFirstName" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedLastName]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="MaskedLastName" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedUID]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          name="MaskedUID" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedEmail]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="MaskedEmail" />
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].ExternalColumns[MaskedDateOfBirth]"
                          dataType="dbDate"
                          name="MaskedDateOfBirth" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[UserGuid]"
                          dataType="guid"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[UserGuid]"
                          name="UserGuid" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedFirstName]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedFirstName]"
                          name="MaskedFirstName" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedLastName]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedLastName]"
                          name="MaskedLastName" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedUID]"
                          codePage="1252"
                          dataType="str"
                          length="12"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedUID]"
                          name="MaskedUID" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedEmail]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedEmail]"
                          name="MaskedEmail" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedDateOfBirth]"
                          dataType="dbDate"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[MaskedDateOfBirth]"
                          name="MaskedDateOfBirth" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column"
                  componentClassID="DTSTransform.DerivedColumn.3"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Output].Columns[ExecutionID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Output].Columns[ExecutionID]"
                          name="ExecutionID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ExecutionID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ExecutionID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure"
                  componentClassID="DTSTransform.OLEDBCommand.3"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Failure"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
declare 
	@UserGuid uniqueidentifier = convert(uniqueidentifier, replace(replace(?, '{', ''), '}', '')),
	@ExecutionID int = ?,
	@ErrorMessage nvarchar(max) = ?,
	@LogType varchar(100) = 'Error',
	@Message varchar(max) = 'Error while processing UserGuid:'
 
declare @error varchar(max) = convert(varchar(max), @ErrorMessage)

execute dbo.UpdateUserStatus @UserGuid, 'Error'

execute process.WriteLog 
	@ExecutionID = @ExecutionID, 
	@LogType = @LogType, 
	@Message = @Message, 
	@Data = @UserGuid
 
execute process.WriteLog 
	@ExecutionID = @ExecutionID, 
	@LogType = @LogType, 
	@Message = 'Error Message', 
	@Data = @error</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[UserGuid]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].Columns[ExecutionID]"
                          cachedDataType="i4"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Output].Columns[ExecutionID]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].Columns[ErrorMessage]"
                          cachedDataType="nText"
                          cachedName="ErrorMessage"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[ErrorMessage]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="i4"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                          dataType="nText"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">193</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup"
                  componentClassID="DTSTransform.Lookup.3"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select 	
	UserGuid = convert(uniqueidentifier, null),
	Status = convert(bit, 0),
	ErrorMessage = convert(nvarchar(max), N''),
	ErrorSeverity = convert(int, 0),
	ErrorStage = convert(int, 0),
	MaskedFirstName		= convert(varchar(12), ''),
	MaskedLastName		= convert(varchar(12), ''),
	MaskedEmail			= convert(varchar(50), ''),
	MaskedUID			= convert(varchar(12), '')</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">
declare 
	@UserGuid				uniqueidentifier = ?,	
	@PFirstName				sql_variant = ?,
	@PLastName				sql_variant = ?,
	@PUID					sql_variant = ?,
	@PEmail					sql_variant = ?

declare
	@MaskedFirstName		varchar(12)	= nullif(convert(varchar(12), @PFirstName), ''),
	@MaskedLastName			varchar(12)	= nullif(convert(varchar(12), @PLastName), ''),
	@MaskedUID				varchar(12)	= nullif(convert(varchar(12), @PUID), ''),
	@MaskedEmail			varchar(50)	= nullif(convert(varchar(50), @PEmail), ''),


	@StatusRequested varchar(50) = 'PII Deletion Requested',
	@StatusDeleted varchar(50) = 'PII Deleted',
	@UserGuidVC varchar(50),
	@Message varchar(200),
	
	@ErrorMessage nvarchar(max) = null,
	@ErrorSeverity int = 0,
	@ErrorState int = 0

select @UserGuidVC = convert(varchar(50), @UserGuid)


begin try
	begin transaction	
	-- Make updates to tables in EDU_SEC
	update AU
		set
			AU.FIRST_NAME				= @MaskedFirstName,
			AU.LAST_NAME				= @MaskedLastName,
			AU.UID						= @MaskedUID,
			AU.Email					= @MaskedEmail,
			AU.MIDDLE_NAME				= null,
			AU.PWD						= null,
			AU.SECURITY_QUESTION_ANSWER	= null,
			AU.SECURITY_QUESTION_GUID	= null,
			AU.ADDRESS_GUID				= null,
			AU.ADDRESS1					= null,
			AU.ADDRESS2					= null,
			AU.ADDRESS3					= null,
			AU.MAIN_PHONE				= null,
			AU.FAX_PHONE				= null,
			AU.TITLE					= null,
			AU.ORGANIZATION				= null,
			AU.ISDELETED				= 1,
			AU.ARCHIVE_DT				= getdate()

		from dbo.APP_USER AU
		where AU.APP_USER_GUID = @UserGuid

	update AUE
		set
			AUE.STUDENTID			= null,
			AUE.TEACHERID			= null,
			AUE.PARENTEMAIL			= null,
			AUE.profileImage		= null,
			AUE.profileImageId		= null
		from dbo.APP_USER_EXT AUE
		where AUE.APP_USER_GUID = @UserGuid
		/*
	update AULP
		set
			AULP.ssoUsername	= newid(),
			AULp.ssoPassword	= null
		from dbo.AppUserLoginProvider AULP
		where AULP.appUserGuid = @UserGuid
		*/
	
	commit transaction
end try
begin catch
    select @ErrorMessage = ERROR_MESSAGE() + ' Line ' + cast(ERROR_LINE() as nvarchar(5)), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE();
    rollback transaction;
	throw
end catch


select 	
	UserGuid = @UserGuid,
	Status = convert(bit, case when @ErrorMessage is null then 1 else 0 end),
	ErrorMessage = @ErrorMessage,
	ErrorSeverity = @ErrorSeverity,
	ErrorStage = @ErrorState,
	MaskedFirstName		= @MaskedFirstName,
	MaskedLastName		= @MaskedLastName,
	MaskedEmail			= @MaskedEmail,
	MaskedUID			= @MaskedUID
</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="UserGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ErrorMessage" dataType="DT_NTEXT" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ErrorSeverity" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ErrorStage" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MaskedFirstName" dataType="DT_STR" length="12" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MaskedLastName" dataType="DT_STR" length="12" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MaskedEmail" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MaskedUID" dataType="DT_STR" length="12" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[UserGuid]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedFirstName]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedLastName]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedUID]};#{Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedEmail]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="{9E8CA41D-2487-4E78-903C-A8BF45D04332}:external"
                      connectionManagerRefId="Project.ConnectionManagers[edu_sec_WRITE]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">UserGuid</property>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">UserGuid</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input].Columns[MaskedFirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="MaskedFirstName"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedFirstName]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedFirstName</property>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedFirstName</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input].Columns[MaskedLastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="MaskedLastName"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedLastName]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedLastName</property>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedLastName</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input].Columns[MaskedEmail]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="MaskedEmail"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedEmail]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedEmail</property>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedEmail</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input].Columns[MaskedUID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="12"
                          cachedName="MaskedUID"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[MaskedUID]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">MaskedUID</property>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">MaskedUID</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[Status]"
                          dataType="bool"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[Status]"
                          name="Status"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Status</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[ErrorMessage]"
                          dataType="nText"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[ErrorMessage]"
                          name="ErrorMessage"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ErrorMessage</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[ErrorSeverity]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[ErrorSeverity]"
                          name="ErrorSeverity"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ErrorSeverity</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[ErrorStage]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output].Columns[ErrorStage]"
                          name="ErrorStage"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ErrorStage</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success"
                  componentClassID="DTSTransform.OLEDBCommand.3"
                  contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                  description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
                  name="Success"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">declare 
	@UserGuid uniqueidentifier = convert(uniqueidentifier, replace(replace(?, '{', ''), '}', '')),
	@ExecutionID int = ?,
	@LogType varchar(100) = 'Info',
	@Message varchar(max) = 'User PII Has been Deleted'

execute dbo.UpdateUserStatus @UserGuid, 'Deleted'

execute process.WriteLog 
 @ExecutionID = @ExecutionID, 
 @LogType = @LogType, 
 @Message = @Message, 
 @Data = @UserGuid
</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input]"
                      errorOrTruncationOperation="Command Execution"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Command Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output].Columns[UserGuid]" />
                        <inputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input].Columns[ExecutionID]"
                          cachedDataType="i4"
                          cachedName="ExecutionID"
                          externalMetadataColumnId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Output].Columns[ExecutionID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                          dataType="i4"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Outputs[OLE DB Command Output]"
                      exclusionGroup="1"
                      name="OLE DB Command Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Outputs[OLE DB Command Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Command Error Output"
                      synchronousInputId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Derived Column Output]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Failed]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure.Inputs[OLE DB Command Input]"
                  name="Failed"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Failed]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Lookup Match Output]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[OLE DB Source Output]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup.Inputs[Lookup Input]"
                  name="OLE DB Source Output"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Succeeded]"
                  endId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success.Inputs[OLE DB Command Input]"
                  name="Succeeded"
                  startId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split.Outputs[Succeeded]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Truncate stage TempUserPII To cleanup any prior failures"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{07E9C4DF-BF9C-463F-9AE1-F7A98FD27C10}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate stage TempUserPII To cleanup any prior failures"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="truncate table stage.tempuserpii" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6F5550E6-CF5A-4C11-8C2A-040F59F9085E}"
          DTS:From="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Truncate stage TempUserPII To cleanup any prior failures"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{5B3B0F9A-5B6A-4135-8EB8-5A469B9D7086}"
          DTS:From="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process stage tempUserPII" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{9348FB28-68E8-40C4-ACA8-921195D81930}"
          DTS:From="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process stage tempUserPII"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get PIIRestoreDuration Setting"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8a9e3d34-16fd-42ec-be0c-39c56e8bd896}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get PIIRestoreDuration Setting"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
          SQLTask:SqlStatementSource="&#xA;declare @SettingValue varchar(1000)&#xA;&#xA;execute process.Get_Setting @SettingKey = 'PIIRestoreDuration', @SettingValue = @SettingValue out&#xA;&#xA;select PIIRestoreDuration = convert(int, @SettingValue)"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="PIIRestoreDuration"
            SQLTask:DtsVariableName="User::PIIRestoreDuration" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Start"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{43269275-D656-495E-AD4F-5B59FBDA43AC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Start">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Start\Create an Execution ID"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{AD6F0DD9-72EA-4695-BED4-B12B3D739B9E}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create an Execution ID"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare &#xA; @ProcessName varchar(100) = ?,&#xA; @ExecutionID int&#xA;&#xA;execute process.CreateExecution&#xA; @ProcessName = @ProcessName,&#xA; @ExecutionID = @ExecutionID output&#xA;&#xA;select ExecutionID = @ExecutionID"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="ExecutionID"
                SQLTask:DtsVariableName="User::ExecutionID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ProcessName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Start\LOG - Started"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{1E1C065E-635D-4BFA-82B9-BAE0483DDBEC}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="LOG - Started"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare&#xA; @ExecutionID int = ?,&#xA; @LogType varchar(100) = 'Info',&#xA; @Message varchar(max) = 'Started'&#xA;&#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Start.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F0CCDEEA-84DF-4F70-935A-99AA83703867}"
          DTS:From="Package\Start\Create an Execution ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Start\LOG - Started" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3B7F8CF8-D278-4F18-B0CB-F72AEC593B9D}"
      DTS:From="Package\Start"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get PIIRestoreDuration Setting" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{50B8FD05-F58E-4946-806F-05FC78EF41BC}"
      DTS:From="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\End" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{A1330589-5DE9-4383-A144-014F7371C953}"
      DTS:From="Package\Get PIIRestoreDuration Setting"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="193,42"
          Id="Package\End\Complete the Execution"
          TopLeft="20,17" />
        <NodeLayout
          Size="141,42"
          Id="Package\End\LOG - Ended"
          TopLeft="27,87" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="255,168"
          Size="255,211"
          Id="Package\End"
          TopLeft="402,584" />
        <NodeLayout
          Size="334,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch"
          TopLeft="14,69" />
        <NodeLayout
          Size="208,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process stage tempUserPII"
          TopLeft="25,135" />
        <NodeLayout
          Size="261,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one"
          TopLeft="27,212" />
        <NodeLayout
          Size="354,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Truncate stage TempUserPII To cleanup any prior failures"
          TopLeft="8,6" />
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically.PrecedenceConstraints[Constraint]"
          TopLeft="362,27">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14,63"
              Start="0,0"
              End="-6.5,63">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,0"
                    Point2="22.5,0"
                    Point3="22.5,4" />
                  <mssgle:LineSegment
                    End="22.5,59" />
                  <mssgle:CubicBezierSegment
                    Point1="22.5,59"
                    Point2="22.5,63"
                    Point3="18.5,63" />
                  <mssgle:LineSegment
                    End="-6.5,63" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically.PrecedenceConstraints[Constraint 1]"
          TopLeft="181,111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-52,24"
              Start="0,0"
              End="-52,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8"
                    Point2="0,12"
                    Point3="-4,12" />
                  <mssgle:LineSegment
                    End="-48,12" />
                  <mssgle:CubicBezierSegment
                    Point1="-48,12"
                    Point2="-52,12"
                    Point3="-52,16" />
                  <mssgle:LineSegment
                    End="-52,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically.PrecedenceConstraints[Constraint 2]"
          TopLeft="129,177">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.5,35"
              Start="0,0"
              End="28.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="4,17.5" />
                  <mssgle:LineSegment
                    End="24.5,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="24.5,17.5"
                    Point2="28.5,17.5"
                    Point3="28.5,21.5" />
                  <mssgle:LineSegment
                    End="28.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="398,309"
          Size="398,352"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically"
          TopLeft="352,202" />
        <NodeLayout
          Size="225,42"
          Id="Package\Get PIIRestoreDuration Setting"
          TopLeft="368,124" />
        <NodeLayout
          Size="190,42"
          Id="Package\Start\Create an Execution ID"
          TopLeft="35,24" />
        <NodeLayout
          Size="146,42"
          Id="Package\Start\LOG - Started"
          TopLeft="53,127" />
        <EdgeLayout
          Id="Package\Start.PrecedenceConstraints[Constraint]"
          TopLeft="128,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="246,389"
          Size="246,432"
          Id="Package\Start"
          TopLeft="40,121" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="286,337">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82,-192"
              Start="0,0"
              End="74.5,-192">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37,0" />
                  <mssgle:CubicBezierSegment
                    Point1="37,0"
                    Point2="41,0"
                    Point3="41,-4" />
                  <mssgle:LineSegment
                    End="41,-188" />
                  <mssgle:CubicBezierSegment
                    Point1="41,-188"
                    Point2="41,-192"
                    Point3="45,-192" />
                  <mssgle:LineSegment
                    End="74.5,-192" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="551,554">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.5,30"
              Start="0,0"
              End="-21.5,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11"
                    Point2="0,15"
                    Point3="-4,15" />
                  <mssgle:LineSegment
                    End="-17.5,15" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.5,15"
                    Point2="-21.5,15"
                    Point3="-21.5,19" />
                  <mssgle:LineSegment
                    End="-21.5,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="480.5,166">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="70.5,36"
              Start="0,0"
              End="70.5,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14"
                    Point2="0,18"
                    Point3="4,18" />
                  <mssgle:LineSegment
                    End="66.5,18" />
                  <mssgle:CubicBezierSegment
                    Point1="66.5,18"
                    Point2="70.5,18"
                    Point3="70.5,22" />
                  <mssgle:LineSegment
                    End="70.5,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="215,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC"
          TopLeft="195,266" />
        <NodeLayout
          Size="203,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields"
          TopLeft="200,374" />
        <NodeLayout
          Size="222,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete"
          TopLeft="193,99" />
        <NodeLayout
          Size="222,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Log a warning about this user"
          TopLeft="561,269" />
        <NodeLayout
          Size="275,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Execution ID and PIIRestoreDuration"
          TopLeft="423,168" />
        <NodeLayout
          Size="132,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Row Count"
          TopLeft="234,167" />
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[OLE DB Source Output]"
          TopLeft="302,141">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Lookup Match Output]"
          TopLeft="302,308">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,23.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Row Count Output 1]"
          TopLeft="366,188.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57,0"
              Start="0,0"
              End="49.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Derived Column Output]"
          TopLeft="560.5,210">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-258,56"
              Start="0,0"
              End="-258,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24"
                    Point2="0,28"
                    Point3="-4,28" />
                  <mssgle:LineSegment
                    End="-254,28" />
                  <mssgle:CubicBezierSegment
                    Point1="-254,28"
                    Point2="-258,28"
                    Point3="-258,32" />
                  <mssgle:LineSegment
                    End="-258,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Lookup No Match Output]"
          TopLeft="410,288.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151,0"
              Start="0,0"
              End="143.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="143.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="15.94361328125,5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii"
          TopLeft="212,465" />
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch.Paths[Lookup Match Output1]"
          TopLeft="301.5,416">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8,49"
              Start="0,0"
              End="-8,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="-4,24.5" />
                  <mssgle:LineSegment
                    End="-4,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-4,24.5"
                    Point2="-8,24.5"
                    Point3="-8,28.5" />
                  <mssgle:LineSegment
                    End="-8,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-52.19138671875,29.5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Add Masked Fields">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:string">true</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Get a batch of users to Delete">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\Fetch the PII from EDU_SEC">
    <Properties>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q2:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q3:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q4:string">true</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Identify and Stage the data for the users in this batch\stage tempuserpii">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="115,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup"
          TopLeft="378,173" />
        <NodeLayout
          Size="112,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Failure"
          TopLeft="472,496" />
        <NodeLayout
          Size="118,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Success"
          TopLeft="252,476" />
        <NodeLayout
          Size="157,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Conditional Split"
          TopLeft="356,368" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\dbo_GetUserPIIToDelete"
          TopLeft="336,107" />
        <NodeLayout
          Size="156,42"
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Derived Column"
          TopLeft="353,276" />
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Succeeded]"
          TopLeft="409.666666666667,410">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-98.6666666666667,66"
              Start="0,0"
              End="-98.6666666666667,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.7994955863808" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.7994955863808"
                    Point2="0,26.7994955863808"
                    Point3="-4,26.7994955863808" />
                  <mssgle:LineSegment
                    End="-94.6666666666667,26.7994955863808" />
                  <mssgle:CubicBezierSegment
                    Point1="-94.6666666666667,26.7994955863808"
                    Point2="-98.6666666666667,26.7994955863808"
                    Point3="-98.6666666666667,30.7994955863808" />
                  <mssgle:LineSegment
                    End="-98.6666666666667,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.4169856770833,31.7994955863808,48.1673046875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[OLE DB Source Output]"
          TopLeft="435.25,149">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Lookup Match Output]"
          TopLeft="433.25,215">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,20.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Failed]"
          TopLeft="459.333333333333,410">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68.6666666666667,86"
              Start="0,0"
              End="68.6666666666667,78.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.9205548549811" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.9205548549811"
                    Point2="0,34.9205548549811"
                    Point3="4,34.9205548549811" />
                  <mssgle:LineSegment
                    End="64.6666666666667,34.9205548549811" />
                  <mssgle:CubicBezierSegment
                    Point1="64.6666666666667,34.9205548549811"
                    Point2="68.6666666666667,34.9205548549811"
                    Point3="68.6666666666667,38.9205548549811" />
                  <mssgle:LineSegment
                    End="68.6666666666667,78.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="21.1203450520833,39.9205548549811,26.4259765625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one.Paths[Derived Column Output]"
          TopLeft="432.75,318">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get a batch of users - collect their PII - Mask their PII - and Process them in edu_sec_WRITE atomically\Process the batch of users one by one\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">true</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>