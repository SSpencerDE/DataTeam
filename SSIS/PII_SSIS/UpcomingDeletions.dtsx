<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/13/2017 10:53:21 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="CHCL306944"
  DTS:CreatorName="US\tgeer"
  DTS:DTSID="{7AD97FBC-2DF4-4538-BA25-59AEA587E8FD}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="14.0.3002.113"
  DTS:LocaleID="1033"
  DTS:ObjectName="UpcomingDeletions"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="93"
  DTS:VersionGUID="{6AA8E53C-BF21-41F3-8A62-553A98882BD7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B7844CD4-38E0-48D7-9728-B49A61F39EFA}"
      DTS:ObjectName="NotificationEmailAddress">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">theo_geer@discovery.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E30955DA-D6AD-4BD4-9F39-F019ED3FA0FA}"
      DTS:ObjectName="NotificationEmailServer">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">mail.mn.discoveryeducation.com</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E667C810-882D-4149-8FA8-1793A8F1608D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailBody">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{178BAAA9-8E9D-4CFD-A41A-B76AAF86BFF9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailFromAddress">
      <DTS:VariableValue
        DTS:DataType="8">dba@discoveryeducation.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC242442-D83E-4639-B100-4D16BE7EBA5A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::EmailPrefix]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailPrefix">
      <DTS:VariableValue
        DTS:DataType="8">[DEV]</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E0C3028-BD52-47DC-8442-CFF47E018EDA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailServer">
      <DTS:VariableValue
        DTS:DataType="8">mail.mn.discoveryeducation.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7F8C5D5-7374-4A50-AAE0-D4DC100813E0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSubject">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8E151837-8B36-47A4-8DCE-F48D5B9B2498}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::NotificationEmailAddress]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailToAddress">
      <DTS:VariableValue
        DTS:DataType="8">theo_geer@discovery.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8D37EFE5-807F-4B3B-AF3E-A852D7952F00}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExecutionID">
      <DTS:VariableValue
        DTS:DataType="3">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6F6EE478-ED4E-4C9F-9887-2716BE483939}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NotificationDataset">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{424E7F60-08A0-4C62-9005-749FD4C24F36}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NotificationRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0A2285E6-84EE-401F-B48A-26B5ED1B141A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessName">
      <DTS:VariableValue
        DTS:DataType="8">UpcomingDeletions</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\End"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F2B03B85-5534-43F3-9E7D-1BDC592ED42B}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="End">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\End\Complete the Execution"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E43D7202-382C-49A9-836D-028D1BFC36B9}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Complete the Execution"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare @ExecutionID int = ? &#xA;execute process.CompleteExecution @ExecutionID = @ExecutionID" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\End\LOG - Ended"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{001F7526-8734-4561-983B-5B9F36F503F7}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="LOG - Ended"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare&#xA; @ExecutionID int = ?,&#xA; @LogType varchar(100) = 'Info',&#xA; @Message varchar(max) = 'Ended'&#xA;&#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Account and School List and email"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{EB570C12-486B-4B1C-89F8-9AFACB560543}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Account and School List and email">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Get Account and School List and email\Build and Send an Email"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{44fa1117-8366-4a7c-a3a2-1de90f6adca8}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Build and Send an Email"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e9781f331f8a4ebf90ae895576508bdd"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::EmailFromAddress,User::EmailPrefix,User::EmailServer,User::EmailToAddress,User::NotificationDataset"
              ReadWriteVariables="User::EmailBody,User::EmailSubject">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Text;
using System.Data.OleDb;
using System.Net;
using System.Net.Mail;
#endregion

namespace ST_e7968100306d40fea4fed3f628ee1c48
{
	/// <summary>
	/// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
	/// or parent of this class.
	/// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
		#region Help:  Using Integration Services variables and parameters in a script
		/* To use a variable in this script, first ensure that the variable has been added to 
		 * either the list contained in the ReadOnlyVariables property or the list contained in 
		 * the ReadWriteVariables property of this script task, according to whether or not your
		 * code needs to write to the variable.  To add the variable, save this script, close this instance of
		 * Visual Studio, and update the ReadOnlyVariables and 
		 * ReadWriteVariables properties in the Script Transformation Editor window.
		 * To use a parameter in this script, follow the same steps. Parameters are always read-only.
		 * 
		 * Example of reading from a variable:
		 *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
		 * 
		 * Example of writing to a variable:
		 *  Dts.Variables["User::myStringVariable"].Value = "new value";
		 * 
		 * Example of reading from a package parameter:
		 *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
		 *  
		 * Example of reading from a project parameter:
		 *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
		 * 
		 * Example of reading from a sensitive project parameter:
		 *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
		 * */

		#endregion

		#region Help:  Firing Integration Services events from a script
		/* This script task can fire events for logging purposes.
		 * 
		 * Example of firing an error event:
		 *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
		 * 
		 * Example of firing an information event:
		 *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
		 * 
		 * Example of firing a warning event:
		 *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
		 * */
		#endregion

		#region Help:  Using Integration Services connection managers in a script
		/* Some types of connection managers can be used in this script task.  See the topic 
		 * "Working with Connection Managers Programatically" for details.
		 * 
		 * Example of using an ADO.Net connection manager:
		 *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
		 *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
		 *  //Use the connection in some code here, then release the connection
		 *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
		 *
		 * Example of using a File connection manager
		 *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
		 *  string filePath = (string)rawConnection;
		 *  //Use the connection in some code here, then release the connection
		 *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
		 * */
		#endregion


		/// <summary>
		/// This method is called when this script task executes in the control flow.
		/// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		/// To open Help, press F1.
		/// </summary>
		public void Main()
		{
			Int64 TotalAccounts = 0;
			Int64 TotalSchools = 0;
			Int64 TotalUsers = 0;

			OleDbDataAdapter adapter = new OleDbDataAdapter();

			DataSet dataset = new DataSet();
			DataTable table;

			string EmailServer = (string)Dts.Variables["User::EmailServer"].Value;
			string EmailToAddress = (string)Dts.Variables["User::EmailToAddress"].Value;
			string EmailFromAddress = (string)Dts.Variables["User::EmailFromAddress"].Value;
			string EmailSubjectPrefix = (string)Dts.Variables["User::EmailPrefix"].Value;

			adapter.Fill(dataset, (object)Dts.Variables["User::NotificationDataset"].Value, "NotificationDataset");

			table = dataset.Tables[0];
			
			string EmailSubject = string.Format("{1} PII Deletion Eligibility for {0:MMMM d, yyyy}", DateTime.Now, EmailSubjectPrefix);

			string CSS = @"
<style  type=""text/css"">
	table, td {
	border: 1px #000000 solid; border-collapse: collapse; padding: 5px; padding-left: 10px; padding-right: 10px; margin: 0px;} 
	.HEADER {
	background-color: #cccccc; font-weight: bold;
	}
	.ACCOUNT {
	background-color: #DFDFDF;
	} 
	.OLD_ACCOUNT {
	background-color: #ffcc99; font-weight: bold;
	}
	
</style>
";

			string EmailFormat = @"
{0}
<br />
The PII Deletion Process has found the following {1} Accounts, {2} Schools, and {3} users which will be eligible for PII Anonymization within the next 30 days.<br />
<br />
<br />
<br />
<table>
{4}
</table>

";

			string AccountFormat = "<tr class=\"{0}\"><td>{1}</td><td>{2}</td><td>{3}</td><td>{4}</td><td>{5}</td></tr>";
			//string SchoolFormat = "<tr class=\"{0}\"><td>{1}</td><td>{2}</td><td>{3}</td><td>{4}</td></tr>";

			StringBuilder tableSB = new StringBuilder();
			List<Guid> AccountsProcessed = new List<Guid>();
			Guid CurrentAccount = new Guid();

			tableSB.AppendLine(string.Format(AccountFormat,
				"HEADER",
				"Account Name",
				"Account Guid",
				"School Count",
				"User Count",
				"Expected PII Deletion Date"));

			TotalAccounts = table.Rows.Count;

			foreach (DataRow row in table.Rows)
			{
				tableSB.AppendLine(
					string.Format(
						AccountFormat,
						"ACCOUNT",
						row.Field<string>("AccountName"),
						row.Field<Guid>("AccountGuid"),
						row.Field<Int64>("SchoolCount"),
						row.Field<Int64>("UserCount"),
						String.Format("{0:MMMM d, yyyy}", row.Field<DateTime?>("ExpectedAnonymizationDate"))
					)
				);

				TotalSchools += row.Field<Int64>("SchoolCount");
				TotalUsers += row.Field<Int64>("UserCount");

				/*
				Guid Account = row.Field<Guid>("AccountGuid");

				if (CurrentAccount != Account)
				{
					Accounts.Add(Account);
					CurrentAccount = Account;
					tableSB.AppendLine(string.Format(AccountFormat, "ACCOUNT", row.Field<string>("AccountName"), row.Field<Guid>("AccountGuid")));
				}

				if (!Schools.Contains(row.Field<Guid>("SchoolGuid")))
					Schools.Add(row.Field<Guid>("SchoolGuid"));
					

				tableSB.AppendLine(string.Format(SchoolFormat,
					"SCHOOL",
					row.Field<string>("SchoolName"),
					row.Field<Guid>("SchoolGuid"),
					row.Field<int>("UserCount"),
					String.Format("{0:MMMM d, yyyy}", row.Field<DateTime?>("ExpectedAnonymizationDate"))
					));
				*/
			}

			string EmailContent = string.Format(EmailFormat, CSS, TotalAccounts, TotalSchools, TotalUsers, tableSB.ToString());

			Dts.Variables["User::EmailSubject"].Value = EmailSubject;
			Dts.Variables["User::EmailBody"].Value = EmailContent;

			SendMailMessage(EmailToAddress, EmailFromAddress, EmailSubject, EmailContent, true, EmailServer);


			Dts.TaskResult = (int)ScriptResults.Success;
		}


		private void SendMailMessage(string SendTo, string From, string Subject, string Body, bool IsBodyHtml, string Server)
		{

			MailMessage htmlMessage;
			SmtpClient mySmtpClient;

			htmlMessage = new MailMessage(From, SendTo, Subject, Body);
			htmlMessage.IsBodyHtml = IsBodyHtml;

			mySmtpClient = new SmtpClient(Server);
			mySmtpClient.Credentials = CredentialCache.DefaultNetworkCredentials;
			mySmtpClient.Send(htmlMessage);

		}

		#region ScriptResults declaration
		/// <summary>
		/// This enum provides a convenient shorthand within the scope of this class for setting the
		/// result of the script.
		/// 
		/// This code was generated automatically.
		/// </summary>
		enum ScriptResults
		{
			Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
			Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
		};
		#endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7968100306d40fea4fed3f628ee1c48.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7968100306d40fea4fed3f628ee1c48.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7968100306d40fea4fed3f628ee1c48.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e7968100306d40fea4fed3f628ee1c48.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e7968100306d40fea4fed3f628ee1c48.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_e7968100306d40fea4fed3f628ee1c48</msb:CodeName>
		<msb:DisplayName>ST_e7968100306d40fea4fed3f628ee1c48</msb:DisplayName>
		<msb:ProjectId>{B6408600-6D63-4D52-A3C2-BE3B670B2E78}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e9781f331f8a4ebf90ae895576508bdd.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e7968100306d40fea4fed3f628ee1c48.Properties.Settings.get_Default():ST_e7968100306d40fea4fed3f628ee1c48.Properties.Sett" +
    "ings")]

namespace ST_e7968100306d40fea4fed3f628ee1c48.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e7968100306d40fea4fed3f628ee1c48")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Discovery Communications")]
[assembly: AssemblyProduct("ST_e7968100306d40fea4fed3f628ee1c48")]
[assembly: AssemblyCopyright("Copyright @ Discovery Communications 2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ST_e9781f331f8a4ebf90ae895576508bdd.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{AE38860F-DBC0-4165-9C78-0600F76C4D67}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e7968100306d40fea4fed3f628ee1c48</RootNamespace><AssemblyName>ST_e9781f331f8a4ebf90ae895576508bdd</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Data.DataSetExtensions" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_e9781f331f8a4ebf90ae895576508bdd.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA8JO1kAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAA7j0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJw9AABPAAAAAEAAANgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9B0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAANgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
PQAAAAAAAEgAAAACAAUA3CMAAAgZAAABAAAAAAAAAOQ8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswCADQAgAAAQAAERZqChZqCxZqDHMQAAAKcxEAAAoNAigS
AAAKbxMAAApyAQAAcG8UAAAKbxUAAAp0IwAAARMFAigSAAAKbxMAAApyJQAAcG8UAAAKbxUAAAp0
IwAAARMGAigSAAAKbxMAAApyTwAAcG8UAAAKbxUAAAp0IwAAARMHAigSAAAKbxMAAApyfQAAcG8U
AAAKbxUAAAp0IwAAARMICQIoEgAACm8TAAAKcqEAAHBvFAAACm8VAAAKctUAAHBvFgAACiYJbxcA
AAoWbxgAAAoTBHL9AABwKBkAAAqMJQAAAREIKBoAAAoTCXJhAQBwEwpyNgQAcBMLcgkGAHATDHMb
AAAKEw1zHAAACiYRDREMHI0YAAABJRZyrgYAcKIlF3K8BgBwoiUYctYGAHCiJRly8AYAcKIlGnIK
BwBwoiUbciAHAHCiKB0AAApvHgAACiYRBG8fAAAKbyAAAApqChEEbx8AAApvIQAAChMPOLIAAAAR
D28iAAAKdBMAAAETEBENEQwcjRgAAAElFnJWBwBwoiUXERByZgcAcCgBAAAroiUYERByfgcAcCgC
AAArjCcAAAGiJRkREHKWBwBwKAMAACuMKwAAAaIlGhEQcq4HAHAoAwAAK4wrAAABoiUbcsIHAHAR
EHLkBwBwKAQAACuMAgAAGygkAAAKoigdAAAKbx4AAAomBxEQcpYHAHAoAwAAK1gLCBEQcq4HAHAo
AwAAK1gMEQ9vJQAACjpC////3hURD3UUAAABExERESwHERFvJgAACtwRCxuNGAAAASUWEQqiJRcG
jCsAAAGiJRgHjCsAAAGiJRkIjCsAAAGiJRoRDW8nAAAKoigdAAAKEw4CKBIAAApvEwAACnIYCABw
bxQAAAoRCW8oAAAKAigSAAAKbxMAAApyPggAcG8UAAAKEQ5vKAAACgIRBhEHEQkRDhcRBSgCAAAG
AigSAAAKFm8pAAAKKgEQAAACAGcBxSwCFQAAAAATMAQALAAAAAIAABEEAwUOBHMqAAAKCgYOBW8r
AAAKDgZzLAAACiUoLQAACm8uAAAKBm8vAAAKKh4CKDAAAAoqHgIoMQAACiqufgEAAAQtHnJeCABw
0AMAAAIoMgAACm8zAAAKczQAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAig1
AAAKKi5zCQAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAVAUA
ACN+AADABQAABAgAACNTdHJpbmdzAAAAAMQNAADQCAAAI1VTAJQWAAAQAAAAI0dVSUQAAACkFgAA
ZAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAAADMAAAAFAAAABgAAAAoAAAAH
AAAANQAAAAIAAAAQAAAAAgAAAAIAAAADAAAABAAAAAIAAAABAAAABgAAAAEAAAABAAAABAAAAAAA
kwQBAAAAAAAGABcD6QUGAKYD6QUGAGMC1gUPAF0GAAAGAJACKgUGAPoCKgUGANsCKgUGAI0DKgUG
ADcDKgUGAFADKgUGAKcCKgUGAMIC3gMKAGsDIAQKAL8BIAQOAHYHbQAOABMBbQAGAHUF1gcGAK8F
GwcOAOoHbQAGACYB2AQSAPcAgwQGAOQE2AQGAEYC1gUGAFwH2AQGAIcFCQYGAGkFFQUSABYCbQQS
AHcCbQQSAPYBAAUGACsC6QUOAJcFeQAKAFsEIAQWAKoGXwEWAB0BXwEGAPoD2AQOADwFbQAGAFYB
2AQGAAwAlAAGANMA2AQOAFAFbQAOANsBbQAaAAkHbQAGABMA2AQGAAEA2AQSAJkHgwQSAAMBawcS
AEkEawcSALoHawcGAIoB2AQGADIB2AQGAPsHKgUAAAAAPQAAAAAAAQABAAEAEAD1BBkAOQABAAEA
AAAQABAGbAZhAAEABAAAARAAtAZsBnUAAwAIAAMBAAA+BwAAWQAEAAsAEQDpBCkBEQCvAS0BEQDj
ADEBBgZlADUBVoAuBzgBVoCPATgBUCAAAAAAhgD7BAYAAQA8IwAAAACBAPMAPAEBAHQjAAAAAIYY
yQUGAAcAfCMAAAAAgxjJBQYABwCEIwAAAACTCIMFRgEHALAjAAAAAJMIlwFLAQcAtyMAAAAAkwij
AVABBwC/IwAAAACWCH4HVgEIAMYjAAAAAIYYyQUGAAgAziMAAAAAkRjPBVsBCAAAAAEAYgUAAAIA
3wQAAAMAYwcAAAQA8gcAAAUAxAQAAAYAqAUAAAEA2AMJAMkFAQARAMkFBgAZAMkFCgApAMkFEAAx
AMkFEAA5AMkFEABBAMkFEABJAMkFEABRAMkFEABZAMkFEABhAMkFEABpAMkFBgC5AMkFBgDhAMkF
FQDxAMkFBgD5AMkFBgB5AMkFBgBxADYHNgABAaYGPAAJAc8EQgARAcQDSQD5ALsETQB5AJsGVQAh
Ac8EWwApAeIHYQAZAVUHZwCJAMkFBgAMAMkFBgAZAVUHdwCJAH8BfgCBAEwHhABJAbAHigBJAbsF
jgCRAKQHSQBRAdgAkwAZAVUHvgCRAM0HxAChAA4CBgDBAPgDyAARAc4DzAABAYoHAQCpAMkF1gCp
AMAE3gBpAckFEABxAc0G4wBpAb0G6QBpAd4A8ABxAMkFBgDBAMkFBgCJAUQB9gCJAfcH/wDJAMkF
BQHpAMkFBgAIABQAHwEIABgAJAEpAHMAlgEuAAsAbgEuABMAdwEuABsAlgEuACMAnwEuACsAyAEu
ADMAyAEuADsAzgEuAEMAnwEuAEsA7AEuAFMAyAEuAFsAGwJDAGMAJAFJAHMAlgFhAHsAJAFjAGsA
JAEbANEAAwABAAQAAwAAAIcFXwEAALcBZAEAAIIHaQECAAUAAwACAAYABQABAAcABQACAAgABwBu
ALUABIAAAAEAAADhGN9uAAAAAAAArwAAAAQAAAAAAAAAAAAAAA0BiwAAAAAACwAAAAAAAAAAAAAA
FgEBBAAAAAAEAAAAAAAAAAAAAAANAW0AAAAAAAQAAAAAAAAAAAAAAA0B2AQAAAAACwAAAAAAAAAA
AAAAFgFGAAAAAAAEAAAAAAAAAAAAAAANAesGAAAAAAAAAAABAAAAGgYAAAUAAgBHAJwARwCgAEcA
pgBHAKoAAAAATnVsbGFibGVgMQBMaXN0YDEASW50NjQAU1RfZTc5NjgxMDAzMDZkNDBmZWE0ZmVk
M2Y2MjhlZTFjNDgAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVl
X18AU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rp
b25zLkdlbmVyaWMAU1RfZTk3ODFmMzMxZjhhNGViZjkwYWU4OTU1NzY1MDhiZGQAR3VpZABGaWVs
ZABTZW5kAGRlZmF1bHRJbnN0YW5jZQBTZW5kTWFpbE1lc3NhZ2UAQ3JlZGVudGlhbENhY2hlAERh
dGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEFwcGVuZExp
bmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRv
U3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFNjcmlwdE9iamVjdE1vZGVs
AFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU1RfZTk3ODFmMzMxZjhhNGVi
ZjkwYWU4OTU1NzY1MDhiZGQuZGxsAEZpbGwAc2V0X0lzQm9keUh0bWwAZ2V0X0l0ZW0AU3lzdGVt
AEZyb20ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5
c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFUYWJsZUNvbGxlY3Rpb24A
RGF0YVJvd0NvbGxlY3Rpb24AU2VuZFRvAEN1bHR1cmVJbmZvAFN0cmluZ0J1aWxkZXIAZ2V0X1Jl
c291cmNlTWFuYWdlcgBPbGVEYkRhdGFBZGFwdGVyAFNlcnZlcgBJRW51bWVyYXRvcgBHZXRFbnVt
ZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2U3OTY4MTAwMzA2ZDQwZmVhNGZlZDNm
NjI4ZWUxYzQ4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF9lNzk2ODEwMDMwNmQ0MGZlYTRmZWQzZjYyOGVlMWM0OC5Qcm9wZXJ0aWVzAGdldF9UYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAZ2V0X0RlZmF1bHROZXR3b3Jr
Q3JlZGVudGlhbHMAU3lzdGVtLkRhdGEuRGF0YVNldEV4dGVuc2lvbnMARGF0YVJvd0V4dGVuc2lv
bnMAU3lzdGVtLkNvbGxlY3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9S
b3dzAEZvcm1hdABPYmplY3QAU3ViamVjdABTeXN0ZW0uTmV0AERhdGFTZXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABnZXRfQ3VycmVudABnZXRfQ291bnQASUNyZWRlbnRp
YWxzQnlIb3N0AE1vdmVOZXh0AFN5c3RlbS5UZXh0AGdldF9Ob3cARGF0YVJvdwBCb2R5AGdldF9B
c3NlbWJseQAAI1UAcwBlAHIAOgA6AEUAbQBhAGkAbABTAGUAcgB2AGUAcgAAKVUAcwBlAHIAOgA6
AEUAbQBhAGkAbABUAG8AQQBkAGQAcgBlAHMAcwAALVUAcwBlAHIAOgA6AEUAbQBhAGkAbABGAHIA
bwBtAEEAZABkAHIAZQBzAHMAACNVAHMAZQByADoAOgBFAG0AYQBpAGwAUAByAGUAZgBpAHgAADNV
AHMAZQByADoAOgBOAG8AdABpAGYAaQBjAGEAdABpAG8AbgBEAGEAdABhAHMAZQB0AAAnTgBvAHQA
aQBmAGkAYwBhAHQAaQBvAG4ARABhAHQAYQBzAGUAdAAAY3sAMQB9ACAAUABJAEkAIABEAGUAbABl
AHQAaQBvAG4AIABFAGwAaQBnAGkAYgBpAGwAaQB0AHkAIABmAG8AcgAgAHsAMAA6AE0ATQBNAE0A
IABkACwAIAB5AHkAeQB5AH0AAILTDQAKADwAcwB0AHkAbABlACAAIAB0AHkAcABlAD0AIgB0AGUA
eAB0AC8AYwBzAHMAIgA+AA0ACgAJAHQAYQBiAGwAZQAsACAAdABkACAAewANAAoACQBiAG8AcgBk
AGUAcgA6ACAAMQBwAHgAIAAjADAAMAAwADAAMAAwACAAcwBvAGwAaQBkADsAIABiAG8AcgBkAGUA
cgAtAGMAbwBsAGwAYQBwAHMAZQA6ACAAYwBvAGwAbABhAHAAcwBlADsAIABwAGEAZABkAGkAbgBn
ADoAIAA1AHAAeAA7ACAAcABhAGQAZABpAG4AZwAtAGwAZQBmAHQAOgAgADEAMABwAHgAOwAgAHAA
YQBkAGQAaQBuAGcALQByAGkAZwBoAHQAOgAgADEAMABwAHgAOwAgAG0AYQByAGcAaQBuADoAIAAw
AHAAeAA7AH0AIAANAAoACQAuAEgARQBBAEQARQBSACAAewANAAoACQBiAGEAYwBrAGcAcgBvAHUA
bgBkAC0AYwBvAGwAbwByADoAIAAjAGMAYwBjAGMAYwBjADsAIABmAG8AbgB0AC0AdwBlAGkAZwBo
AHQAOgAgAGIAbwBsAGQAOwANAAoACQB9AA0ACgAJAC4AQQBDAEMATwBVAE4AVAAgAHsADQAKAAkA
YgBhAGMAawBnAHIAbwB1AG4AZAAtAGMAbwBsAG8AcgA6ACAAIwBEAEYARABGAEQARgA7AA0ACgAJ
AH0AIAANAAoACQAuAE8ATABEAF8AQQBDAEMATwBVAE4AVAAgAHsADQAKAAkAYgBhAGMAawBnAHIA
bwB1AG4AZAAtAGMAbwBsAG8AcgA6ACAAIwBmAGYAYwBjADkAOQA7ACAAZgBvAG4AdAAtAHcAZQBp
AGcAaAB0ADoAIABiAG8AbABkADsADQAKAAkAfQANAAoACQANAAoAPAAvAHMAdAB5AGwAZQA+AA0A
CgABgdENAAoAewAwAH0ADQAKADwAYgByACAALwA+AA0ACgBUAGgAZQAgAFAASQBJACAARABlAGwA
ZQB0AGkAbwBuACAAUAByAG8AYwBlAHMAcwAgAGgAYQBzACAAZgBvAHUAbgBkACAAdABoAGUAIABm
AG8AbABsAG8AdwBpAG4AZwAgAHsAMQB9ACAAQQBjAGMAbwB1AG4AdABzACwAIAB7ADIAfQAgAFMA
YwBoAG8AbwBsAHMALAAgAGEAbgBkACAAewAzAH0AIAB1AHMAZQByAHMAIAB3AGgAaQBjAGgAIAB3
AGkAbABsACAAYgBlACAAZQBsAGkAZwBpAGIAbABlACAAZgBvAHIAIABQAEkASQAgAEEAbgBvAG4A
eQBtAGkAegBhAHQAaQBvAG4AIAB3AGkAdABoAGkAbgAgAHQAaABlACAAbgBlAHgAdAAgADMAMAAg
AGQAYQB5AHMALgA8AGIAcgAgAC8APgANAAoAPABiAHIAIAAvAD4ADQAKADwAYgByACAALwA+AA0A
CgA8AGIAcgAgAC8APgANAAoAPAB0AGEAYgBsAGUAPgANAAoAewA0AH0ADQAKADwALwB0AGEAYgBs
AGUAPgANAAoADQAKAACAozwAdAByACAAYwBsAGEAcwBzAD0AIgB7ADAAfQAiAD4APAB0AGQAPgB7
ADEAfQA8AC8AdABkAD4APAB0AGQAPgB7ADIAfQA8AC8AdABkAD4APAB0AGQAPgB7ADMAfQA8AC8A
dABkAD4APAB0AGQAPgB7ADQAfQA8AC8AdABkAD4APAB0AGQAPgB7ADUAfQA8AC8AdABkAD4APAAv
AHQAcgA+AAANSABFAEEARABFAFIAABlBAGMAYwBvAHUAbgB0ACAATgBhAG0AZQAAGUEAYwBjAG8A
dQBuAHQAIABHAHUAaQBkAAAZUwBjAGgAbwBvAGwAIABDAG8AdQBuAHQAABVVAHMAZQByACAAQwBv
AHUAbgB0AAA1RQB4AHAAZQBjAHQAZQBkACAAUABJAEkAIABEAGUAbABlAHQAaQBvAG4AIABEAGEA
dABlAAAPQQBDAEMATwBVAE4AVAAAF0EAYwBjAG8AdQBuAHQATgBhAG0AZQAAF0EAYwBjAG8AdQBu
AHQARwB1AGkAZAAAF1MAYwBoAG8AbwBsAEMAbwB1AG4AdAAAE1UAcwBlAHIAQwBvAHUAbgB0AAAh
ewAwADoATQBNAE0ATQAgAGQALAAgAHkAeQB5AHkAfQAAM0UAeABwAGUAYwB0AGUAZABBAG4AbwBu
AHkAbQBpAHoAYQB0AGkAbwBuAEQAYQB0AGUAACVVAHMAZQByADoAOgBFAG0AYQBpAGwAUwB1AGIA
agBlAGMAdAAAH1UAcwBlAHIAOgA6AEUAbQBhAGkAbABCAG8AZAB5AABxUwBUAF8AZQA3ADkANgA4
ADEAMAAwADMAMAA2AGQANAAwAGYAZQBhADQAZgBlAGQAMwBmADYAMgA4AGUAZQAxAGMANAA4AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAClBGpQrNvES6pW/axyHcYk
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtGgcSCgoKEj0SQQ4ODg4ODg4OEkUOEkkSTRJRBSAA
EoCBBSAAEoCFBiABEoCJHAMgABwHIAMIEj0cDgUgABKAkQUgARJBCAUAABGAlQYAAw4OHBwIFRKA
mQERgJ0GAAIODh0cBSABEkUOBSAAEoChAyAACAQgABJJCBABAh4AEk0OAwoBDgUKARGAnQMKAQoK
CgEVEYCxARGAlQgVEYCxARGAlQUAAg4OHAMgAAIDIAAOBCABARwEBwESVQcgBAEODg4OBCABAQIF
AAASgL0GIAEBEoDBBSABARJVCAABEoDFEYDJBSAAEoDNByACAQ4SgM0It3pcVhk04IkIiYRdzYCA
zJEEAAAAAAQBAAAAAwYSZQMGEmkDBhIQAgYIAwYRFAkgBgEODg4OAg4EAAASZQQAABJpBQABARJp
BAAAEhADAAABBAgAEmUECAASaQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF9lNzk2ODEwMDMwNmQ0MGZlYTRmZWQzZjYyOGVlMWM0OAAA
BQEAAAAAHQEAGERpc2NvdmVyeSBDb21tdW5pY2F0aW9ucwAALgEAKUNvcHlyaWdodCBAIERpc2Nv
dmVyeSBDb21tdW5pY2F0aW9ucyAyMDE3AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjAB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMQ9
AAAAAAAAAAAAAN49AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQPQAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAegQAAAAAAAAAAAAAegQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAN9u4RgAAAEA327hGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBNoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAALYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAABSABkAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAEQAaQBzAGMAbwB2AGUAcgB5ACAAQwBvAG0AbQB1AG4AaQBjAGEAdABpAG8AbgBz
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AZQA3ADkA
NgA4ADEAMAAwADMAMAA2AGQANAAwAGYAZQBhADQAZgBlAGQAMwBmADYAMgA4AGUAZQAxAGMANAA4
AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMwA2ADkALgAyADgA
MwA4ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZQA5ADcAOAAx
AGYAMwAzADEAZgA4AGEANABlAGIAZgA5ADAAYQBlADgAOQA1ADUANwA2ADUAMAA4AGIAZABkAC4A
ZABsAGwAAAB4ACoAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIABEAGkAcwBjAG8AdgBlAHIAeQAgAEMAbwBtAG0AdQBuAGkAYwBhAHQAaQBvAG4A
cwAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBlADkANwA4ADEA
ZgAzADMAMQBmADgAYQA0AGUAYgBmADkAMABhAGUAOAA5ADUANQA3ADYANQAwADgAYgBkAGQALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQA3ADkANgA4ADEA
MAAwADMAMAA2AGQANAAwAGYAZQBhADQAZgBlAGQAMwBmADYAMgA4AGUAZQAxAGMANAA4AAAAQgAP
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADMANgA5AC4AMgA4ADMA
OAAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2
ADMANgA5AC4AMgA4ADMAOAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get Account and School List and email\Fetch the Information for the Email"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{8384D986-C4FF-47F3-B2E3-6D29DDCDE06B}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fetch the Information for the Email"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email"
                  componentClassID="DTSTransform.Aggregate.3"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Aggregate the data for the Email"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Inputs[Aggregate Input 1].Columns[AccountGuid]"
                          cachedDataType="guid"
                          cachedName="AccountGuid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountGuid]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Inputs[Aggregate Input 1].Columns[AccountName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="AccountName"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountName]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Inputs[Aggregate Input 1].Columns[SchoolGuid]"
                          cachedDataType="guid"
                          cachedName="SchoolGuid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[SchoolGuid]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Inputs[Aggregate Input 1].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[UserGuid]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Inputs[Aggregate Input 1].Columns[ExpectedAnonymizationDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ExpectedAnonymizationDate"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[ExpectedAnonymizationDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountGuid]"
                          dataType="guid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountGuid]"
                          name="AccountGuid">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountGuid]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountName]"
                          name="AccountName">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[SchoolCount]"
                          dataType="ui4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[SchoolCount]"
                          name="SchoolCount">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[SchoolGuid]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">1</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[UserCount]"
                          dataType="ui4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[UserCount]"
                          name="UserCount">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[UserGuid]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">1</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[ExpectedAnonymizationDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[ExpectedAnonymizationDate]"
                          name="ExpectedAnonymizationDate">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[ExpectedAnonymizationDate]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded"
                  componentClassID="DTSTransform.Lookup.3"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check To see if this Account might be excluded"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select AccountGuid = EntityGuid, IsExcluded = convert(bit, 1)
	from dbo.Exclusion E
	where E.ExpirationDate &gt; dateadd(d, 30, getdate())
	and E.EntityType = 'Account'</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select AccountGuid = EntityGuid, IsExcluded = convert(bit, 1)
	from dbo.Exclusion E
	where E.ExpirationDate &gt; dateadd(d, 30, getdate())
	and E.EntityType = 'Account') [refTable]
where [refTable].[AccountGuid] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="AccountGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsExcluded" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountGuid]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Inputs[Lookup Input].Columns[AccountGuid]"
                          cachedDataType="guid"
                          cachedName="AccountGuid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountGuid]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">AccountGuid</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="IgnoreFailure"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Match Output].Columns[AccountIsExcluded]"
                          dataType="bool"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Match Output].Columns[AccountIsExcluded]"
                          name="AccountIsExcluded"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">IsExcluded</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded"
                  componentClassID="DTSTransform.Lookup.3"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check To see if this School might be excluded"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select SchoolGuid = EntityGuid, IsExcluded = convert(bit, 1)
	from dbo.Exclusion E
	where E.ExpirationDate &gt; dateadd(d, 30, getdate())
	and E.EntityType = 'School'</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select SchoolGuid = EntityGuid, IsExcluded = convert(bit, 1)
	from dbo.Exclusion E
	where E.ExpirationDate &gt; dateadd(d, 30, getdate())
	and E.EntityType = 'School') [refTable]
where [refTable].[SchoolGuid] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="SchoolGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsExcluded" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[SchoolGuid]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Inputs[Lookup Input].Columns[SchoolGuid]"
                          cachedDataType="guid"
                          cachedName="SchoolGuid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[SchoolGuid]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">SchoolGuid</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="IgnoreFailure"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Match Output].Columns[SchoolIsExcluded]"
                          dataType="bool"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Match Output].Columns[SchoolIsExcluded]"
                          name="SchoolIsExcluded"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">IsExcluded</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded"
                  componentClassID="DTSTransform.Lookup.3"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Check To see if this User might be excluded"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select UserGuid = EntityGuid, IsExcluded = convert(bit, 1)
	from dbo.Exclusion E
	where E.ExpirationDate &gt; dateadd(d, 30, getdate())
	and E.EntityType = 'User'</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select UserGuid = EntityGuid, IsExcluded = convert(bit, 1)
	from dbo.Exclusion E
	where E.ExpirationDate &gt; dateadd(d, 30, getdate())
	and E.EntityType = 'User') [refTable]
where [refTable].[UserGuid] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="UserGuid" dataType="DT_GUID" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsExcluded" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[UserGuid]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Connections[OleDbConnection]"
                      connectionManagerID="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}:external"
                      connectionManagerRefId="Project.ConnectionManagers[PII]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Inputs[Lookup Input].Columns[UserGuid]"
                          cachedDataType="guid"
                          cachedName="UserGuid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[UserGuid]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">UserGuid</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="IgnoreFailure"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Match Output].Columns[UserIsExcluded]"
                          dataType="bool"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Match Output].Columns[UserIsExcluded]"
                          name="UserIsExcluded"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">IsExcluded</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized"
                  componentClassID="DTSAdapter.OLEDBSource.3"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Get Users that are ready to have their PII Anonymized"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">use edu_sec

set transaction isolation level read uncommitted
set nocount on

declare 
	@Now date = getdate(),
	@SearchDate date = dateadd(d, -30, getdate()),
	@DefaultDate date = '19000101'
	
;with cteLimitedProduct (PRODUCT_GUID) as (
	select PRODUCT_GUID from dbo.PRODUCT P where P.NAME in ('Discovery Education (HUB)', 'Discovery Educator Network', 'User Created Content')
),
	cteUnlicensedSchools (AccountGuid, SchoolGuid, MaxLicenseDate) as (
	select
		AccountGuid		= S.ACCOUNT_GUID,
		SchoolGuid		= S.SITE_GUID,
		MaxLicenseDate	= max(isnull(PL.END_EFF_DATE, @DefaultDate))
		from 
						dbo.[SITE] S
			left join	dbo.PRODUCT_LICENSE PL on S.SITE_GUID = PL.SITE_GUID
			left join	cteLimitedProduct L on PL.PRODUCT_GUID = L.PRODUCT_GUID
		where 
			L.PRODUCT_GUID is null			
		group by 
			S.ACCOUNT_GUID,
			S.SITE_GUID
		having 
				-- Licenses are all expired for at least 30 days or have never been licensed at all
			max(isnull(PL.END_EFF_DATE, '19000101')) &lt;= @SearchDate
),
	cteUsers (AccountGuid, SchoolGuid, UserGuid, MaxLicenseDate) as (
	select
		US.AccountGuid,
		US.SchoolGuid,
		UserGuid		=	AU.APP_USER_GUID,
		MaxLicenseDate	=	case when max(isnull(PL.END_EFF_DATE, US.MaxLicenseDate)) &gt; max(US.MaxLicenseDate) then max(isnull(PL.END_EFF_DATE, US.MaxLicenseDate)) else max(US.MaxLicenseDate) end
		from
						cteUnlicensedSchools US
			join		dbo.APP_USER AU on US.SchoolGuid = AU.SITE_GUID
			left join	dbo.PRODUCT_LICENSE PL on AU.APP_USER_GUID = PL.SITE_GUID
			left join	cteLimitedProduct L on PL.PRODUCT_GUID = L.PRODUCT_GUID
		where
				L.PRODUCT_GUID is null
			and isnull(AU.ISDELETED, 0) = 0
		group by 
			US.AccountGuid,
			US.SchoolGuid,
			AU.app_user_guid
		having
			case when max(isnull(PL.END_EFF_DATE, US.MaxLicenseDate)) &gt; max(US.MaxLicenseDate) then max(isnull(PL.END_EFF_DATE, US.MaxLicenseDate)) else max(US.MaxLicenseDate) end &lt;= @SearchDate
)
	select 
		AccountGuid					=	U.AccountGuid,
		AccountName					=	A.[Name],
		U.UserGuid,
		U.SchoolGuid,
		MaxLicenseDate = nullif(U.MaxLicenseDate, @DefaultDate),
		ExpectedAnonymizationDate = nullif(dateadd(d, 60, U.MaxLicenseDate), dateadd(d, 60, @DefaultDate))
		from
						cteUsers U
			join		dbo.ACCOUNT A on U.AccountGuid = A.ACCOUNT_GUID
		order by 2, 5</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Connections[OleDbConnection]"
                      connectionManagerID="{AC9A8F07-C374-495F-9AFD-C842F1C66200}:external"
                      connectionManagerRefId="Project.ConnectionManagers[edu_sec]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountGuid]"
                          dataType="guid"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[AccountGuid]"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountGuid]"
                          name="AccountGuid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[AccountName]"
                          length="255"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[AccountName]"
                          name="AccountName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[ExpectedAnonymizationDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[ExpectedAnonymizationDate]"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[ExpectedAnonymizationDate]"
                          name="ExpectedAnonymizationDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          dataType="guid"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[UserGuid]"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[UserGuid]"
                          name="UserGuid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[SchoolGuid]"
                          dataType="guid"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[SchoolGuid]"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[SchoolGuid]"
                          name="SchoolGuid"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[MaxLicenseDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[MaxLicenseDate]"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].Columns[MaxLicenseDate]"
                          name="MaxLicenseDate"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[AccountGuid]"
                          dataType="guid"
                          name="AccountGuid" />
                        <externalMetadataColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[AccountName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="AccountName" />
                        <externalMetadataColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[ExpectedAnonymizationDate]"
                          dataType="dbTimeStamp"
                          name="ExpectedAnonymizationDate" />
                        <externalMetadataColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[UserGuid]"
                          dataType="guid"
                          name="UserGuid" />
                        <externalMetadataColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[SchoolGuid]"
                          dataType="guid"
                          name="SchoolGuid" />
                        <externalMetadataColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output].ExternalColumns[MaxLicenseDate]"
                          dataType="dbTimeStamp"
                          name="MaxLicenseDate" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[AccountGuid]"
                          dataType="guid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[AccountGuid]"
                          name="AccountGuid" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[AccountName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[AccountName]"
                          name="AccountName" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[UserGuid]"
                          dataType="guid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[UserGuid]"
                          name="UserGuid" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[SchoolGuid]"
                          dataType="guid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[SchoolGuid]"
                          name="SchoolGuid" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[MaxLicenseDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[MaxLicenseDate]"
                          name="MaxLicenseDate" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[ExpectedAnonymizationDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[ExpectedAnonymizationDate]"
                          name="ExpectedAnonymizationDate" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset"
                  componentClassID="DTSAdapter.RecordsetDestination.3"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Notification Dataset">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::NotificationDataset</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset.Inputs[Recordset Destination Input].Columns[AccountGuid]"
                          cachedDataType="guid"
                          cachedName="AccountGuid"
                          cachedSortKeyPosition="3"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[AccountGuid]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset.Inputs[Recordset Destination Input].Columns[AccountName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="AccountName"
                          cachedSortKeyPosition="2"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[AccountName]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset.Inputs[Recordset Destination Input].Columns[SchoolCount]"
                          cachedDataType="ui4"
                          cachedName="SchoolCount"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[SchoolCount]"
                          name="SchoolCount" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset.Inputs[Recordset Destination Input].Columns[UserCount]"
                          cachedDataType="ui4"
                          cachedName="UserCount"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[UserCount]"
                          name="UserCount" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset.Inputs[Recordset Destination Input].Columns[ExpectedAnonymizationDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ExpectedAnonymizationDate"
                          cachedSortKeyPosition="1"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[ExpectedAnonymizationDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions"
                  componentClassID="DTSTransform.ConditionalSplit.3"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Process Exclusions"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input].Columns[AccountIsExcluded]"
                          cachedDataType="bool"
                          cachedName="AccountIsExcluded"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Match Output].Columns[AccountIsExcluded]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input].Columns[SchoolIsExcluded]"
                          cachedDataType="bool"
                          cachedName="SchoolIsExcluded"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Match Output].Columns[SchoolIsExcluded]" />
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input].Columns[UserIsExcluded]"
                          cachedDataType="bool"
                          cachedName="UserIsExcluded"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Match Output].Columns[UserIsExcluded]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[ExcludedAccount]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ExcludedAccount"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Match Output].Columns[AccountIsExcluded]}, FALSE )</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(AccountIsExcluded, FALSE )</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[ExcludedSchool]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ExcludedSchool"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Match Output].Columns[SchoolIsExcluded]}, FALSE )</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(SchoolIsExcluded, FALSE )</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[ExcludedUser]"
                      description="Output 3 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ExcludedUser"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[REPLACENULL](#{Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Match Output].Columns[UserIsExcluded]}, FALSE )</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(UserIsExcluded, FALSE )</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">2</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[Included]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Included"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Row Count"
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::NotificationRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Get Account and School List and email\Fetch the Information for the Email\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort"
                  componentClassID="DTSTransform.Sort.3"
                  contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
                  name="Sort"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                      name="EliminateDuplicates">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of threads to use for sorting."
                      expressionType="Notify"
                      name="MaximumThreads">-1</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Inputs[Sort Input]"
                      name="Sort Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Inputs[Sort Input].Columns[AccountGuid]"
                          cachedDataType="guid"
                          cachedName="AccountGuid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountGuid]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">3</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Inputs[Sort Input].Columns[AccountName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="AccountName"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountName]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">2</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Inputs[Sort Input].Columns[SchoolCount]"
                          cachedDataType="ui4"
                          cachedName="SchoolCount"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[SchoolCount]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Inputs[Sort Input].Columns[UserCount]"
                          cachedDataType="ui4"
                          cachedName="UserCount"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[UserCount]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Inputs[Sort Input].Columns[ExpectedAnonymizationDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ExpectedAnonymizationDate"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[ExpectedAnonymizationDate]">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data."
                              name="NewComparisonFlags">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the sort order of the column."
                              name="NewSortKeyPosition">1</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output]"
                      isSorted="true"
                      name="Sort Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[AccountGuid]"
                          dataType="guid"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[AccountGuid]"
                          name="AccountGuid"
                          sortKeyPosition="3">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountGuid]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[AccountName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[AccountName]"
                          name="AccountName"
                          sortKeyPosition="2">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[AccountName]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[SchoolCount]"
                          dataType="ui4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[SchoolCount]"
                          name="SchoolCount">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[SchoolCount]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[UserCount]"
                          dataType="ui4"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[UserCount]"
                          name="UserCount">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[UserCount]}</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[ExpectedAnonymizationDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output].Columns[ExpectedAnonymizationDate]"
                          name="ExpectedAnonymizationDate"
                          sortKeyPosition="1">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column that is associated with this output column."
                              name="SortColumnId">#{Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1].Columns[ExpectedAnonymizationDate]}</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Aggregate Output 1]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Inputs[Sort Input]"
                  name="Aggregate Output 1"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Included]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email.Inputs[Aggregate Input 1]"
                  name="Included"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Outputs[Included]" />
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Lookup Match Output]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Lookup Match Output1]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Lookup Match Output2]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions.Inputs[Conditional Split Input]"
                  name="Lookup Match Output"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[OLE DB Source Output]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded.Inputs[Lookup Input]"
                  name="OLE DB Source Output"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Row Count Output 1]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset.Inputs[Recordset Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Sort Output]"
                  endId="Package\Get Account and School List and email\Fetch the Information for the Email\Row Count.Inputs[Row Count Input 1]"
                  name="Sort Output"
                  startId="Package\Get Account and School List and email\Fetch the Information for the Email\Sort.Outputs[Sort Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get Account and School List and email\LOG - EmailInfo"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{aed8f067-50d1-4455-add2-9e2daeb814ed}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="LOG - EmailInfo"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare&#xA;@ExecutionID int = ?,&#xA;@LogType varchar(100) = 'Info',&#xA;@Message varchar(max) = 'Email Notification From:',&#xA;@EmailToAddress varchar(200) = ?,&#xA;@EmailFromAddress varchar(200) = ?,&#xA;@EmailSubject varchar(500) = ?,&#xA;@EmailBody varchar(max) = ?&#xA;&#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = @EmailFromAddress&#xA;&#xA;select @Message = 'Email Notification To:'&#xA;&#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = @EmailToAddress&#xA;&#xA;select @Message = 'Email Notification Subject:'&#xA; &#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = @EmailSubject&#xA; &#xA;select @Message = 'Email Notification Body:'&#xA; &#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = @EmailBody" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EmailToAddress"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmailSubject"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmailBody"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::EmailFromAddress"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Get Account and School List and email\LOG - Notification Rowcount"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f3e35f35-5aec-47ef-a67c-7a6168b90c0a}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="LOG - Notification Rowcount"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare&#xA; @ExecutionID int = ?,&#xA; @LogType varchar(100) = 'Info',&#xA; @Message varchar(max) = 'Found schools that will become eligible for PII Deletion',&#xA;@Data int = ?&#xA;&#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = @Data" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::NotificationRowCount"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get Account and School List and email.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{BB1C69C7-8992-4AEF-8A6C-41E56CCB668B}"
          DTS:From="Package\Get Account and School List and email\Fetch the Information for the Email"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Get Account and School List and email\LOG - Notification Rowcount" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get Account and School List and email.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B22F3AD3-91AC-45ED-8286-4C31C61A24C1}"
          DTS:From="Package\Get Account and School List and email\Fetch the Information for the Email"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Get Account and School List and email\Build and Send an Email" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Get Account and School List and email.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{C2C0FAF3-9ABD-46FA-B1F9-EA157F0B9F2B}"
          DTS:From="Package\Get Account and School List and email\Build and Send an Email"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Get Account and School List and email\LOG - EmailInfo" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Start"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D775AF14-2F0C-4F5D-B6BE-3ADE6CB8F0AD}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Start">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Start\Create an Execution ID"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0548F309-D968-479A-B232-EBA861D24AEC}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create an Execution ID"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare &#xA; @ProcessName varchar(100) = ?,&#xA; @ExecutionID int&#xA;&#xA;execute process.CreateExecution&#xA; @ProcessName = @ProcessName,&#xA; @ExecutionID = @ExecutionID output&#xA;&#xA;select ExecutionID = @ExecutionID"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="ExecutionID"
                SQLTask:DtsVariableName="User::ExecutionID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ProcessName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Start\LOG - Started"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{3AEE9EBB-5D0A-4B22-A1CB-307C1617C983}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="LOG - Started"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{D47CFC28-4DA8-4533-9776-F9A60F5A2A02}"
              SQLTask:SqlStatementSource="declare&#xA; @ExecutionID int = ?,&#xA; @LogType varchar(100) = 'Info',&#xA; @Message varchar(max) = 'Started'&#xA;&#xA;execute process.WriteLog &#xA; @ExecutionID = @ExecutionID, &#xA; @LogType = @LogType, &#xA; @Message = @Message, &#xA; @Data = null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExecutionID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Start.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7595007D-9480-4201-8A1E-5563B78C4B31}"
          DTS:From="Package\Start\Create an Execution ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Start\LOG - Started" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{09F0335B-16CB-4EFD-BC18-FDA780387EAA}"
      DTS:From="Package\Start"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Get Account and School List and email" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{BF8CEC88-4325-40D8-92A0-932F1B39BB0C}"
      DTS:From="Package\Get Account and School List and email"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\End" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="193.333333333334,42"
          Id="Package\End\Complete the Execution"
          TopLeft="20,17" />
        <NodeLayout
          Size="141.333333333334,42"
          Id="Package\End\LOG - Ended"
          TopLeft="27,87" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="254.666666666667,168"
          Size="254.666666666667,210.666666666667"
          Id="Package\End"
          TopLeft="348,426" />
        <NodeLayout
          Size="196.666666666667,42.6666666666667"
          Id="Package\Get Account and School List and email\Build and Send an Email"
          TopLeft="35,94" />
        <NodeLayout
          Size="242.666666666667,42.6666666666667"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email"
          TopLeft="26,17" />
        <NodeLayout
          Size="156,42.6666666666667"
          Id="Package\Get Account and School List and email\LOG - EmailInfo"
          TopLeft="331,90" />
        <NodeLayout
          Size="214.666666666667,42.6666666666667"
          Id="Package\Get Account and School List and email\LOG - Notification Rowcount"
          TopLeft="332,17" />
        <EdgeLayout
          Id="Package\Get Account and School List and email.PrecedenceConstraints[Constraint]"
          TopLeft="268.666666666667,38.3333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.3333333333334,0"
              Start="0,0"
              End="55.8333333333334,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="55.8333333333334,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email.PrecedenceConstraints[Constraint 1]"
          TopLeft="147.333333333333,59.6666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14,34.3333333333333"
              Start="0,0"
              End="-14,26.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1666666666667"
                    Point2="0,17.1666666666667"
                    Point3="-4,17.1666666666667" />
                  <mssgle:LineSegment
                    End="-10,17.1666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-10,17.1666666666667"
                    Point2="-14,17.1666666666667"
                    Point3="-14,21.1666666666667" />
                  <mssgle:LineSegment
                    End="-14,26.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email.PrecedenceConstraints[Constraint 3]"
          TopLeft="231.666666666667,113.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99.3333333333334,0"
              Start="0,0"
              End="91.8333333333334,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="91.8333333333334,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="550.666666666667,190.666666666667"
          Size="550.666666666667,234.666666666667"
          Id="Package\Get Account and School List and email"
          TopLeft="338,150" />
        <NodeLayout
          Size="190,42"
          Id="Package\Start\Create an Execution ID"
          TopLeft="35,24" />
        <NodeLayout
          Size="146,42"
          Id="Package\Start\LOG - Started"
          TopLeft="53,127" />
        <EdgeLayout
          Id="Package\Start.PrecedenceConstraints[Constraint]"
          TopLeft="128,66">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="246,222.666666666667"
          Size="246,266"
          Id="Package\Start"
          TopLeft="28,153" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="274,286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64,-27"
              Start="0,0"
              End="56.5,-27">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28,0"
                    Point2="32,0"
                    Point3="32,-4" />
                  <mssgle:LineSegment
                    End="32,-23" />
                  <mssgle:CubicBezierSegment
                    Point1="32,-23"
                    Point2="32,-27"
                    Point3="36,-27" />
                  <mssgle:LineSegment
                    End="56.5,-27" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="613.5,368">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-138,58"
              Start="0,0"
              End="-138,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="-4,29" />
                  <mssgle:LineSegment
                    End="-134,29" />
                  <mssgle:CubicBezierSegment
                    Point1="-134,29"
                    Point2="-138,29"
                    Point3="-138,33" />
                  <mssgle:LineSegment
                    End="-138,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get Account and School List and email\Fetch the Information for the Email">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="297.333333333334,42.6666666666667"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded"
          TopLeft="481,189" />
        <NodeLayout
          Size="334.666666666667,42.6666666666667"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized"
          TopLeft="406,27.1403508986573" />
        <NodeLayout
          Size="173.333333333334,42"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Notification Dataset"
          TopLeft="83,510" />
        <NodeLayout
          Size="132,42"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Row Count"
          TopLeft="102,424" />
        <NodeLayout
          Size="304,42.6666666666667"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded"
          TopLeft="479,114" />
        <NodeLayout
          Size="288,42.6666666666667"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded"
          TopLeft="482,271" />
        <NodeLayout
          Size="100,42"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Sort"
          TopLeft="111,344" />
        <NodeLayout
          Size="172,42.6666666666667"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Process Exclusions"
          TopLeft="563,349" />
        <NodeLayout
          Size="233.333333333334,42.6666666666667"
          Id="Package\Get Account and School List and email\Fetch the Information for the Email\Aggregate the data for the Email"
          TopLeft="266,348" />
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Row Count Output 1]"
          TopLeft="168.75,466">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[OLE DB Source Output]"
          TopLeft="573.333333333333,69.8070175653239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.6666666666666,44.1929824346761"
              Start="0,0"
              End="57.6666666666666,36.6929824346761">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.096491217338" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.096491217338"
                    Point2="0,22.096491217338"
                    Point3="4,22.096491217338" />
                  <mssgle:LineSegment
                    End="53.6666666666666,22.096491217338" />
                  <mssgle:CubicBezierSegment
                    Point1="53.6666666666666,22.096491217338"
                    Point2="57.6666666666666,22.096491217338"
                    Point3="57.6666666666666,26.096491217338" />
                  <mssgle:LineSegment
                    End="57.6666666666666,36.6929824346761" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Lookup Match Output2]"
          TopLeft="626,313.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,35.3333333333333"
              Start="0,0"
              End="23,27.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.6666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.6666666666667"
                    Point2="0,17.6666666666667"
                    Point3="4,17.6666666666667" />
                  <mssgle:LineSegment
                    End="19,17.6666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="19,17.6666666666667"
                    Point2="23,17.6666666666667"
                    Point3="23,21.6666666666667" />
                  <mssgle:LineSegment
                    End="23,27.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.69138671875,22.6666666666667,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Lookup Match Output1]"
          TopLeft="627.833333333333,231.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.3333333333333"
              Start="0,0"
              End="0,31.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,10.1119791666667,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Lookup Match Output]"
          TopLeft="630.333333333333,156.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.3333333333333"
              Start="0,0"
              End="0,24.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,6.61197916666666,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Included]"
          TopLeft="563,369.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-63.6666666666666,0"
              Start="0,0"
              End="-56.1666666666666,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-56.1666666666666,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-47.5779231770833,5,38.9891796875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Aggregate Output 1]"
          TopLeft="266,367.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-55,0"
              Start="0,0"
              End="-47.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-47.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Account and School List and email\Fetch the Information for the Email.Paths[Sort Output]"
          TopLeft="164.5,386">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this School might be excluded">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Account and School List and email\Fetch the Information for the Email\Get Users that are ready to have their PII Anonymized">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this Account might be excluded">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Account and School List and email\Fetch the Information for the Email\Check To see if this User might be excluded">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>