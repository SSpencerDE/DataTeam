<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/31/2017 11:15:13 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="CHCL322687"
  DTS:CreatorName="US\tgeer"
  DTS:DTSID="{6BC72E02-7EB9-4F05-AB8C-80930BE59DBD}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="15.0.1900.73"
  DTS:LocaleID="1033"
  DTS:ObjectName="Highlight"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="47"
  DTS:VersionGUID="{324CBA85-15E4-4119-A7E9-9F10AC87D2E7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{4C64471C-FCBF-4B04-A5B5-9FDEA93A9CA3}"
      DTS:ObjectName="BatchSize">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">1000</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{B547D89C-A5C1-43B4-A20F-0546C059D3F9}"
      DTS:ObjectName="Limit">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">10000</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DCF4D8E1-B3C7-4241-B5A3-BFBF8C4763C7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Collection">
      <DTS:VariableValue
        DTS:DataType="8">highlight</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2D87928-B194-4D4D-A109-1346076C0E54}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Database">
      <DTS:VariableValue
        DTS:DataType="8">techbook2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D292B1E8-C7EA-46AD-8FDA-1796E1010A53}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StartID">
      <DTS:VariableValue
        DTS:DataType="8">000000000000000000000000</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get Highlight Data from Mongo"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{1DD9F7FB-6E60-45A4-BEF5-39098127F670}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Highlight Data from Mongo"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight"
              componentClassID="DTSAdapter.OLEDBDestination.3"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="DW stage mongo Highlight"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stage].[mongo_Highlight]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Connections[OleDbConnection]"
                  connectionManagerID="{2202876F-EB39-431D-B184-384C2E1149FE}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[_id]"
                      cachedDataType="wstr"
                      cachedLength="1000"
                      cachedName="_id"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[_id]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[_id]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[courseGuid]"
                      cachedDataType="guid"
                      cachedName="courseGuid"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[courseGuid]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[courseGuid]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[subdisciplineGuid]"
                      cachedDataType="guid"
                      cachedName="subdisciplineGuid"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[subdisciplineGuid]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[subdisciplineGuid]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[unitGuid]"
                      cachedDataType="guid"
                      cachedName="unitGuid"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[unitGuid]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[unitGuid]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[guidConceptId]"
                      cachedDataType="guid"
                      cachedName="guidConceptId"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[guidConceptId]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[guidConceptId]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[guidAssetId]"
                      cachedDataType="guid"
                      cachedName="guidAssetId"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[guidAssetId]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[guidAssetId]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[node1]"
                      cachedDataType="wstr"
                      cachedLength="2000"
                      cachedName="node1"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[node1]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[node1]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[node2]"
                      cachedDataType="wstr"
                      cachedLength="2000"
                      cachedName="node2"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[node2]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[node2]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[offset1]"
                      cachedDataType="i4"
                      cachedName="offset1"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[offset1]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[offset1]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[offset2]"
                      cachedDataType="i4"
                      cachedName="offset2"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[offset2]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[offset2]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[color]"
                      cachedDataType="wstr"
                      cachedLength="500"
                      cachedName="color"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[color]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[color]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[page]"
                      cachedDataType="i4"
                      cachedName="page"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[page]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[page]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[selectedText]"
                      cachedDataType="nText"
                      cachedName="selectedText"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[selectedText]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[selectedText]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[username]"
                      cachedDataType="guid"
                      cachedName="username"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[username]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[username]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[createdOn]"
                      cachedDataType="dbTimeStamp"
                      cachedName="createdOn"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[createdOn]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[createdOn]" />
                    <inputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].Columns[updatedOn]"
                      cachedDataType="dbTimeStamp"
                      cachedName="updatedOn"
                      externalMetadataColumnId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[updatedOn]"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[updatedOn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[_id]"
                      dataType="wstr"
                      length="1000"
                      name="_id" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[courseGuid]"
                      dataType="guid"
                      name="courseGuid" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[subdisciplineGuid]"
                      dataType="guid"
                      name="subdisciplineGuid" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[unitGuid]"
                      dataType="guid"
                      name="unitGuid" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[guidConceptId]"
                      dataType="guid"
                      name="guidConceptId" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[guidAssetId]"
                      dataType="guid"
                      name="guidAssetId" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[node1]"
                      dataType="wstr"
                      length="2000"
                      name="node1" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[node2]"
                      dataType="wstr"
                      length="2000"
                      name="node2" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[offset1]"
                      dataType="i4"
                      name="offset1" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[offset2]"
                      dataType="i4"
                      name="offset2" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[color]"
                      dataType="wstr"
                      length="500"
                      name="color" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[page]"
                      dataType="i4"
                      name="page" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[selectedText]"
                      dataType="nText"
                      name="selectedText" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[username]"
                      dataType="guid"
                      name="username" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[createdOn]"
                      dataType="dbTimeStamp"
                      name="createdOn" />
                    <externalMetadataColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input].ExternalColumns[updatedOn]"
                      dataType="dbTimeStamp"
                      name="updatedOn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Get Highlight rows from Mongo"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8cc10af1232940158f83e1d639e05744")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8cc10af1232940158f83e1d639e05744")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using MongoFetch;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
	#region Help:  Using Integration Services variables and parameters
	/* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
	#endregion

	#region Help:  Using Integration Services Connnection Managers
	/* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
	#endregion

	#region Help:  Firing Integration Services Events
	/* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
	#endregion

	private MongoFetch.MongoFetch Fetch;

	/// <summary>
	/// This method is called once, before rows begin to be processed in the data flow.
	///
	/// You can remove this method if you don't need to do anything here.
	/// </summary>
	public override void PreExecute()
	{
		base.PreExecute();
		Fetch = new MongoFetch.MongoFetch(Variables.StartDatabase, Variables.ServerAddress, Variables.Port, Variables.Username, Variables.Password);
		Fetch.CreateCursor(Variables.Database, Variables.Collection, Variables.Limit, Variables.StartID, Variables.BatchSize);
	}

	/// <summary>
	/// This method is called after all the rows have passed through this component.
	///
	/// You can delete this method if you don't need to do anything here.
	/// </summary>
	public override void PostExecute()
	{
		base.PostExecute();
		Fetch.CloseCursor();
	}

	public override void CreateNewOutputRows()
	{
		/*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
		Highlight highlight;
		while (Fetch.IsCursorOpen)
		{
			var doc = Fetch.GetNextDocument();
			highlight = new Highlight();

			RowBuffer.AddRow();
			Fetch.MapDocument(doc, highlight);

			RowBuffer.id = highlight._id.ToString();
			RowBuffer.courseGuid = highlight.courseGuid;
			RowBuffer.subdisciplineGuid = highlight.subdisciplineGuid;
			RowBuffer.unitGuid = highlight.unitGuid;
			RowBuffer.guidConceptId = highlight.guidConceptId;
			RowBuffer.guidAssetId = highlight.guidAssetId;
			RowBuffer.node1 = highlight.node1.Length > 2000 ? highlight.node1.Substring(0, 2000) : highlight.node1;
			RowBuffer.node2 = highlight.node2.Length > 2000 ? highlight.node2.Substring(0, 2000) : highlight.node2;
			RowBuffer.offset1 = highlight.offset1;
			RowBuffer.offset2 = highlight.offset2;
			RowBuffer.color = highlight.color.Length > 1000 ? highlight.color.Substring(0, 1000) : highlight.color;
			RowBuffer.page = highlight.page;
			RowBuffer.selectedText.AddBlobData(Encoding.Unicode.GetBytes(highlight.selectedText));
			RowBuffer.username = highlight.username;
			RowBuffer.createdOn = highlight.createdOn;
			RowBuffer.updatedOn = highlight.updatedOn;

		}
	}
	/*
	public ScriptMain()
	{
		AppDomain.CurrentDomain.AssemblyResolve += CurrentDomain_AssemblyResolve;
	}

	public System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
	{
		string path = Variables.LibraryPath;

		if (args.Name.Contains("MongoFetch"))
			return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "MongoFetch.dll"));
		if (args.Name.Contains("MongoDB.Bson"))
			return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "MongoDB.Bson.dll"));
		if (args.Name.Contains("MongoDB.Driver.Core"))
			return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "MongoDB.Driver.Core.dll"));
		if (args.Name.Contains("MongoDB.Driver"))
			return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "MongoDB.Driver.dll"));

		return null;
	}
	*/
	  /*
		string name = (string)Dts.Variables[“$Project::CustomDLLName”].Value; // name of the .dll, example: SSISHelper
		if (args.Name.Contains(name))
		{
			string path = (string)Dts.Variables[“$Project::CustomDLLPath”].Value; // full path including filename.dll
			return System.Reflection.Assembly.LoadFile(path);
		}
		return null;
	}
	
	/*
	static ScriptMain()
	{
		AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
	}
	static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
	{
		if (args.Name.Contains("ssisHelper"))
		{
			string path = Dts.Variables[" sender. Variables.LibraryFolder;
			return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(path, "ssisHelper.dll"));
		}
		return null;
	}
	*/
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class RowBuffer: ScriptBuffer

{
    public RowBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String id
    {
        set
        {
            this[0] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Guid courseGuid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool courseGuid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Guid subdisciplineGuid
    {
        set
        {
            this[2] = value;
        }
    }
    public bool subdisciplineGuid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Guid unitGuid
    {
        set
        {
            this[3] = value;
        }
    }
    public bool unitGuid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Guid guidConceptId
    {
        set
        {
            this[4] = value;
        }
    }
    public bool guidConceptId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Guid guidAssetId
    {
        set
        {
            this[5] = value;
        }
    }
    public bool guidAssetId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String node1
    {
        set
        {
            this[6] = value;
        }
    }
    public bool node1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String node2
    {
        set
        {
            this[7] = value;
        }
    }
    public bool node2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 offset1
    {
        set
        {
            this[8] = value;
        }
    }
    public bool offset1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 offset2
    {
        set
        {
            this[9] = value;
        }
    }
    public bool offset2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String color
    {
        set
        {
            this[10] = value;
        }
    }
    public bool color_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 page
    {
        set
        {
            this[11] = value;
        }
    }
    public bool page_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn selectedText
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[12]];
        }
    }
    public bool selectedText_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public Guid username
    {
        set
        {
            this[13] = value;
        }
    }
    public bool username_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime createdOn
    {
        set
        {
            this[14] = value;
        }
    }
    public bool createdOn_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime updatedOn
    {
        set
        {
            this[15] = value;
        }
    }
    public bool updatedOn_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8cc10af1232940158f83e1d639e05744.Properties.Settings.get_Default():SC_8cc10af1232940158f83e1d639e05744.Properties.Sett" +
    "ings")]

namespace SC_8cc10af1232940158f83e1d639e05744.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public RowBuffer RowBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != RowBuffer)
        {
            RowBuffer.SetEndOfRowset();
            RowBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Row"))
            {
                RowBuffer = new RowBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 BatchSize
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["BatchSize"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Collection
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Collection"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Database
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Database"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Limit
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Limit"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Password
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Password"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 Port
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["Port"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String ServerAddress
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ServerAddress"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String StartDatabase
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["StartDatabase"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String StartID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["StartID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String Username
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Username"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_8cc10af1232940158f83e1d639e05744</msb:CodeName>
		<msb:DisplayName>SC_8cc10af1232940158f83e1d639e05744</msb:DisplayName>
		<msb:ProjectId>{DB560CD8-F951-42EB-B999-A1D876DE12CA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_8cc10af1232940158f83e1d639e05744.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:Breakpoint Include="b31d6bdf183143c2890cf9087dc1311a">
			<msb:FileName>main.cs</msb:FileName>
			<msb:LineNumber>119</msb:LineNumber>
			<msb:ColumnNumber>4</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8cc10af1232940158f83e1d639e05744.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E12ACD40-F671-44BD-95E7-9D7BF4867032}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8cc10af1232940158f83e1d639e05744</RootNamespace>
    <AssemblyName>SC_8cc10af1232940158f83e1d639e05744</AssemblyName>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MongoDB.Bson">
      <HintPath>C:\Repos\datateam\SSIS\notesandhighlights\MongoFetch\bin\Debug\MongoDB.Bson.dll</HintPath>
    </Reference>
    <Reference Include="MongoDB.Driver">
      <HintPath>C:\Repos\datateam\SSIS\notesandhighlights\MongoFetch\bin\Debug\MongoDB.Driver.dll</HintPath>
    </Reference>
    <Reference Include="MongoDB.Driver.Core">
      <HintPath>C:\Repos\datateam\SSIS\notesandhighlights\MongoFetch\bin\Debug\MongoDB.Driver.Core.dll</HintPath>
    </Reference>
    <Reference Include="MongoFetch">
      <HintPath>C:\Repos\datateam\SSIS\notesandhighlights\MongoFetch\bin\Debug\MongoFetch.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.InteropServices.RuntimeInformation, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\tgeer\Documents\dev\notesandhighlights\MongoFetch\bin\Release\System.Runtime.InteropServices.RuntimeInformation.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8cc10af1232940158f83e1d639e05744.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8cc10af1232940158f83e1d639e05744.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8cc10af1232940158f83e1d639e05744.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8cc10af1232940158f83e1d639e05744.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8cc10af1232940158f83e1d639e05744.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8cc10af1232940158f83e1d639e05744.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
ZgB5ADICSwB5AMMGbAB5AKcGbABxAOsGcQCRAFoIdQCRAJcGfwCRAIYGAQAZAVoIEACRAOoHhQCR
AFUJiQCZAI4GjQCRAH8GkgCRAAwLBgCRANIJBgCRANUJcQDBAFoIBgDBANEAmwDBAGkJogDJAFoI
BgDBADYJqAApAY4GrgDBAPcKtQAxAcgKuwBJARMCwgBJARMLywDZAFoI0QD5AFoIBgAuAAsAfwEu
ABMAiAEuABsApwEuACMAsAEuACsA2QEuADMA2QEuADsA2QEuAEMAsAEuAEsA3wEuAFMA2QEuAFsA
9gFDAGMAQALjAGsAQAIhAXsAQAJpBXMApwGJBXMApwEtAJcAAwABAAYAIQAHACsACAAtAAAAwwFV
AQAABQZZAQAAoQFdAQAA6QVZAQAAfAFdAQAAzAVZAQAAvQFdAQAA/wVZAQAAMQFdAQAApQVZAQAA
DwFdAQAAjgVZAQAASABVAQAARgVZAQAAegBVAQAAagVZAQAAXgBiAQAAVwVZAQAAkABiAQAAewVZ
AQAAOwhVAQAAYQZZAQAA/AFiAQAAEwZZAQAAuwpmAQAAcgZZAQAAQwJdAQAAIwZZAQAA1QZrAQAA
TAZZAQAAuQZrAQAANwZZAQAArgRiAQAAUgdVAQAA0QJVAQAA7wliAQAAygFVAQAAeQpiAQAAmwlV
AQAAzAJVAQAAyQBVAQAAKQJVAQAA9QdwAQAAmwJ1AQAA+Ql6AQEABgADAAEABwAFAAEACAAHAAEA
CQAJAAEACgALAAEACwANAAEADAAPAAEADQARAAEADgATAAEADwAVAAEAEAAXAAEAEQAZAAEAEgAb
AAEAEwAdAAEAFAAfAAEAFQAhAAEAFgAjAAEAFwAlAAEAGAAnAAEAGQApAAEAGgArAAEAGwAtAAEA
HAAvAAEAHQAxAAIAHgAzAAIAHwA1AAEAIAA3AAEAIQA5AAEAIgA7AAEAIwA9AAEAJAA/AAEAJQBB
AAIAMABDAAIAMQBFAAIAMgBHAAIAMwBJAAIANABLAAIANQBNAAIANgBPAAIANwBRAAIAOABTAAIA
OQBVAAIAOwBXAAIAPABZAAEAPQBZAAIAPgBbAASAAAABAAAAVxzQYQAAAAAAAJgAAAAEAAAAAAAA
AAAAAADZAOkAAAAAAAsAAAAAAAAAAAAAAOIAWAoAAAAAAQAAAAAAAAAAAAAA6wDuBAAAAAACAAkA
AwAAAAAAAAAAAHcHAAAAAAsAAAAAAAAAAAAAAOIAfgoAAAAABAAAAAAAAAAAAAAA2QCgBgAAAAAL
AAAAAAAAAAAAAADiAKgHAAAAAAAAAAABAAAAtQgAAAAAAAAASURUU1ZhcmlhYmxlMTAwAElEVFNW
YXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAZ2V0X25vZGUxAHNldF9ub2RlMQBn
ZXRfb2Zmc2V0MQBzZXRfb2Zmc2V0MQBJbnQzMgBnZXRfbm9kZTIAc2V0X25vZGUyAGdldF9vZmZz
ZXQyAHNldF9vZmZzZXQyAFNDXzhjYzEwYWYxMjMyOTQwMTU4ZjgzZTFkNjM5ZTA1NzQ0ADxNb2R1
bGU+AGdldF9TdGFydElEAEdldE91dHB1dElEAEFkZEJsb2JEYXRhAG1zY29ybGliAE9iamVjdElk
AGdldF9ndWlkQXNzZXRJZABzZXRfZ3VpZEFzc2V0SWQAZ2V0X2d1aWRDb25jZXB0SWQAc2V0X2d1
aWRDb25jZXB0SWQATWFya091dHB1dHNGaW5pc2hlZABnZXRfX2lkAHNldF9pZABnZXRfc3ViZGlz
Y2lwbGluZUd1aWQAc2V0X3N1YmRpc2NpcGxpbmVHdWlkAGdldF9jb3Vyc2VHdWlkAHNldF9jb3Vy
c2VHdWlkAGdldF91bml0R3VpZABzZXRfdW5pdEd1aWQAZ2V0X1Bhc3N3b3JkAGRlZmF1bHRJbnN0
YW5jZQBnZXRfVW5pY29kZQBnZXRfcGFnZQBzZXRfcGFnZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBnZXRfVXNlcm5hbWUAZ2V0X3VzZXJuYW1lAHNldF91c2VybmFtZQBEYXRl
VGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBnZXRfRGF0
YWJhc2UAZ2V0X1N0YXJ0RGF0YWJhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBnZXRfQmF0Y2hTaXplAEVuY29kaW5nAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3Vic3RyaW5nAE1vbmdvRmV0Y2gAZ2V0
X0xlbmd0aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfOGNjMTBhZjEyMzI5NDAxNThmODNlMWQ2
MzllMDU3NDQuZGxsAHNldF9ub2RlMV9Jc051bGwAc2V0X29mZnNldDFfSXNOdWxsAHNldF9ub2Rl
Ml9Jc051bGwAc2V0X29mZnNldDJfSXNOdWxsAHNldF9ndWlkQXNzZXRJZF9Jc051bGwAc2V0X2d1
aWRDb25jZXB0SWRfSXNOdWxsAHNldF9pZF9Jc051bGwAc2V0X3N1YmRpc2NpcGxpbmVHdWlkX0lz
TnVsbABzZXRfY291cnNlR3VpZF9Jc051bGwAc2V0X3VuaXRHdWlkX0lzTnVsbABzZXRfcGFnZV9J
c051bGwAc2V0X3VzZXJuYW1lX0lzTnVsbABzZXRfdXBkYXRlZE9uX0lzTnVsbABzZXRfY3JlYXRl
ZE9uX0lzTnVsbABzZXRfY29sb3JfSXNOdWxsAGdldF9zZWxlY3RlZFRleHRfSXNOdWxsAFNldE51
bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAGdldF91cGRhdGVkT24Ac2V0X3VwZGF0ZWRPbgBn
ZXRfY3JlYXRlZE9uAHNldF9jcmVhdGVkT24AcmVzb3VyY2VNYW4AZ2V0X0lzQ3Vyc29yT3BlbgBT
Y3JpcHRNYWluAEJsb2JDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X0NvbGxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4
Y2VwdGlvbgBNb25nb0RCLkJzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABQaXBlbGluZUJ1ZmZlcgBTY3JpcHRC
dWZmZXIAUm93QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAGdldF9jb2xvcgBzZXRfY29sb3IAQ2xvc2VDdXJzb3IAQ3JlYXRl
Q3Vyc29yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ184Y2MxMGFmMTIzMjk0
MDE1OGY4M2UxZDYzOWUwNTc0NC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAU0NfOGNjMTBhZjEyMzI5NDAxNThmODNlMWQ2MzllMDU3NDQuUHJvcGVydGllcwBn
ZXRfUmVhZE9ubHlWYXJpYWJsZXMAR2V0Qnl0ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1
bW5JbmRleGVzAFNldHRpbmdzAENvbm5lY3Rpb25zAEJ1ZmZlcnMAZ2V0X1NlcnZlckFkZHJlc3MA
RmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAE9iamVjdABTZXRFbmRPZlJvd3NldABI
aWdobGlnaHQAZ2V0X0xpbWl0AGdldF9EZWZhdWx0AEJzb25Eb2N1bWVudABNYXBEb2N1bWVudABH
ZXROZXh0RG9jdW1lbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAZ2V0X1BvcnQATWljcm9zb2Z0LlNxbFNl
cnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQAU3lzdGVtLlRleHQAZ2V0X3NlbGVjdGVkVGV4
dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFs
dWF0b3JDb250ZXh0AEFkZFJvdwBnZXRfQXNzZW1ibHkAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBw
AGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4A
IABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBu
ACAAaQBuAHMAdABlAGEAZAAuAAAHUgBvAHcAABNCAGEAdABjAGgAUwBpAHoAZQAAFUMAbwBsAGwA
ZQBjAHQAaQBvAG4AABFEAGEAdABhAGIAYQBzAGUAAAtMAGkAbQBpAHQAABFQAGEAcwBzAHcAbwBy
AGQAAAlQAG8AcgB0AAAbUwBlAHIAdgBlAHIAQQBkAGQAcgBlAHMAcwAAG1MAdABhAHIAdABEAGEA
dABhAGIAYQBzAGUAAA9TAHQAYQByAHQASQBEAAARVQBzAGUAcgBuAGEAbQBlAABxUwBDAF8AOABj
AGMAMQAwAGEAZgAxADIAMwAyADkANAAwADEANQA4AGYAOAAzAGUAMQBkADYAMwA5AGUAMAA1ADcA
NAA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAO8kO+R1fPhI
tUpjGLGK1WsABCABAQgDIAABBSABARERBCABAQ4FIAEBEXUIIAUBDg4IDg4IIAUBDg4IDggIBwMS
PRJBEUUEIAASQQYgAgESQRwEIAARRQMgAA4EIAARVQMgAAgFIAIOCAgFAAASgIkFIAEdBQ4FIAEB
HQUEIAARXQMgAAIJIAMBEk0dCBJRBSACAQgcAwYSTQMGHQgEIAEcCAQgAQIIAwcBCAYAAggSUQ4F
IAEdCAgFIAASgJUGIAESgJkcBQAAEoCdBiABHBKAoQgAARKApRGAqQUgABKArQcgAgEOEoCtCLd6
XFYZNOCJCImEXc2AgMyRCNkFwyMu5fMqAwYSOQMGEhQDBhIYAwYSDAMGEmEDBhJtAwYScQMGEiAE
IAEBAgUgAQERVQQgABJZBSABARFdCyAEAQgdCB0STRJRBSABARJhBAAAEm0EAAAScQUAAQEScQQA
ABIgAwAAAQMoAA4DKAACBCgAEVUDKAAIBCgAElkEKAARXQQIABJtBAgAEnEECAASIAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfOGNjMTBhZjEy
MzI5NDAxNThmODNlMWQ2MzllMDU3NDQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC42AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjYEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADsQwAAAAAAAAAAAAAGRAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA+EMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAa
BAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA0GFXHAAAAQDQYVccPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
egMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA4
AGMAYwAxADAAYQBmADEAMgAzADIAOQA0ADAAMQA1ADgAZgA4ADMAZQAxAGQANgAzADkAZQAwADUA
NwA0ADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAyADUANQAu
ADIANQAwADQAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4AGMA
YwAxADAAYQBmADEAMgAzADIAOQA0ADAAMQA1ADgAZgA4ADMAZQAxAGQANgAzADkAZQAwADUANwA0
ADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
QwBfADgAYwBjADEAMABhAGYAMQAyADMAMgA5ADQAMAAxADUAOABmADgAMwBlADEAZAA2ADMAOQBl
ADAANQA3ADQANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMA
XwA4AGMAYwAxADAAYQBmADEAMgAzADIAOQA0ADAAMQA1ADgAZgA4ADMAZQAxAGQANgAzADkAZQAw
ADUANwA0ADQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcA
MgA1ADUALgAyADUAMAA0ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADcAMgA1ADUALgAyADUAMAA0ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAGDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8cc10af1232940158f83e1d639e05744</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::Collection,User::Database,User::StartID,$Package::BatchSize,$Package::Limit,$Project::StartDatabase,$Project::ServerAddress,$Project::Port,$Project::Username,$Project::Password</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D11.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;119&lt;/FileLine&gt;
&lt;FileColumn&gt;4&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">2834c671fd8777d9b4fefdcd7a66e0a1</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">602bde18d0801ddc138f7764842d893f66da67a2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row]"
                  hasSideEffects="true"
                  name="Row">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[_id]"
                      dataType="wstr"
                      length="1000"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[_id]"
                      name="_id" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[courseGuid]"
                      dataType="guid"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[courseGuid]"
                      name="courseGuid" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[subdisciplineGuid]"
                      dataType="guid"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[subdisciplineGuid]"
                      name="subdisciplineGuid" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[unitGuid]"
                      dataType="guid"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[unitGuid]"
                      name="unitGuid" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[guidConceptId]"
                      dataType="guid"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[guidConceptId]"
                      name="guidConceptId" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[guidAssetId]"
                      dataType="guid"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[guidAssetId]"
                      name="guidAssetId" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[node1]"
                      dataType="wstr"
                      length="2000"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[node1]"
                      name="node1" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[node2]"
                      dataType="wstr"
                      length="2000"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[node2]"
                      name="node2" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[offset1]"
                      dataType="i4"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[offset1]"
                      name="offset1" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[offset2]"
                      dataType="i4"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[offset2]"
                      name="offset2" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[color]"
                      dataType="wstr"
                      length="500"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[color]"
                      name="color" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[page]"
                      dataType="i4"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[page]"
                      name="page" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[selectedText]"
                      dataType="nText"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[selectedText]"
                      name="selectedText" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[username]"
                      dataType="guid"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[username]"
                      name="username" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[createdOn]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[createdOn]"
                      name="createdOn" />
                    <outputColumn
                      refId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[updatedOn]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row].Columns[updatedOn]"
                      name="updatedOn" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get Highlight Data from Mongo.Paths[Row]"
              endId="Package\Get Highlight Data from Mongo\DW stage mongo Highlight.Inputs[OLE DB Destination Input]"
              name="Row"
              startId="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo.Outputs[Row]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get the Max ID in the database"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{353CBB1C-AFAD-40F3-B062-6C1BDD353F87}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get the Max ID in the database"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2202876F-EB39-431D-B184-384C2E1149FE}"
          SQLTask:SqlStatementSource="select StartID = max(_id) from mongo.Highlight H"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="StartID"
            SQLTask:DtsVariableName="User::StartID" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Process the staged data"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{70575DED-8D45-4EF3-A9D4-B1C3D38BC54C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process the staged data"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2202876F-EB39-431D-B184-384C2E1149FE}"
          SQLTask:SqlStatementSource="execute stage.Process_mongo_Highlight" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Remove 10 Minutes from the Max ID to create overlap"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{62619284-D722-438A-BE57-A21EC6D42C98}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Remove 10 Minutes from the Max ID to create overlap"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_234781b66de5455cb530c607fcbcdc71"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::StartID">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_234781b66de5455cb530c607fcbcdc71")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_234781b66de5455cb530c607fcbcdc71")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_234781b66de5455cb530c607fcbcdc71
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here

			Dts.TaskResult = (int)ScriptResults.Success;

			string startID = (string)Dts.Variables["User::StartID"].Value;

			if (string.IsNullOrWhiteSpace(startID) || startID == "".PadRight(24, '0'))
				Dts.Variables["User::StartID"].Value = "".PadRight(24, '0');

			else
			{
				string hexTimeStamp = startID.Substring(0, 8);
				int numeric = Int32.Parse(hexTimeStamp, System.Globalization.NumberStyles.HexNumber);
				numeric -= (60 * 3); // 10 minutes (sixty seconds * 10 minutes)
				string newHex = numeric.ToString("X");
				string newID = newHex.PadRight(24, '0');
				Dts.Variables["User::StartID"].Value = newID;
			}
			Dts.TaskResult = (int)ScriptResults.Success;

		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_234781b66de5455cb530c607fcbcdc71.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{eb33e079-7d0b-4ff6-b73a-743c5b44ee2b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_234781b66de5455cb530c607fcbcdc71</RootNamespace>
    <AssemblyName>ST_234781b66de5455cb530c607fcbcdc71</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_234781b66de5455cb530c607fcbcdc71</msb:CodeName>
		<msb:DisplayName>ST_234781b66de5455cb530c607fcbcdc71</msb:DisplayName>
		<msb:ProjectId>{F3794598-204E-4626-A105-005DB533BDCF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_234781b66de5455cb530c607fcbcdc71.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234781b66de5455cb530c607fcbcdc71.Properties.Settings.get_Default():ST_234781b66de5455cb530c607fcbcdc71.Properties.Sett" +
    "ings")]

namespace ST_234781b66de5455cb530c607fcbcdc71.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234781b66de5455cb530c607fcbcdc71.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234781b66de5455cb530c607fcbcdc71.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_234781b66de5455cb530c607fcbcdc71.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_234781b66de5455cb530c607fcbcdc71.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_234781b66de5455cb530c607fcbcdc71.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_234781b66de5455cb530c607fcbcdc71.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAG1R+1kAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAEjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMAvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAACILgAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
LwAAAAAAAEgAAAACAAUAkCEAAEAMAAABAAAAAAAAANAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBADNAAAAAQAAEQIoEAAAChZvEQAACgIoEAAACm8SAAAK
cgEAAHBvEwAACm8UAAAKdBsAAAEKBigVAAAKLRYGch0AAHAfGB8wKBYAAAooFwAACiwqAigQAAAK
bxIAAApyAQAAcG8TAAAKch0AAHAfGB8wKBYAAApvGAAACitMBhYebxkAAAogAwIAACgaAAAKCwcg
tAAAAFkLEgFyHwAAcCgbAAAKHxgfMG8WAAAKDAIoEAAACm8SAAAKcgEAAHBvEwAACghvGAAACgIo
EAAAChZvEQAACioeAigcAAAKKh4CKB0AAAoqrn4BAAAELR5yIwAAcNADAAACKB4AAApvHwAACnMg
AAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoIQAACioucwgAAAaAAwAABCoA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA9AMAACN+AABgBAAAsAUAACNTdHJp
bmdzAAAAABAKAACYAAAAI1VTAKgKAAAQAAAAI0dVSUQAAAC4CgAAiAEAACNCbG9iAAAAAAAAAAIA
AAFXHaIBCQMAAAD6ATMAFgAAAQAAACAAAAAFAAAABgAAAAkAAAABAAAAIQAAAAIAAAAQAAAAAQAA
AAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAKgDAQAAAAAABgBEAngEBgDTAngEBgCQAWUE
DwDsBAAABgC9ASYEBgAnAiYEBgAIAiYEBgC6AiYEBgBkAiYEBgB9AiYEBgDUASYEBgDvAQsDCgCY
AlcDCgAJAVcDBgDgA9kDBgBzAWUEBgBsBdkDBgBIBJgEBgA4BBEEDgBDAZIDDgCkAZIDDgAlAfwD
BgBYAXgECgCAA1cDEgAuBbQAEgCHALQABgAnA9kDBgAlANkDBgA4BREEBgDUANkDBgCQANkDBgCb
BSYEAAAAACsAAAAAAAEAAQABABAA8QMBADkAAQABAAAAEACfBPsERQABAAMAAAEQAEUF+wRZAAMA
BwADAQAAXgUAAD0ABAAKABEA5QOOABEA+QCSABEAdwCWAAYGUwCaAFaATgWdAFaA2QCdAFAgAAAA
AIYA9wMGAAEAKSEAAAAAhhhYBAYAAQAxIQAAAACDGFgEBgABADkhAAAAAJMIRAShAAEAZSEAAAAA
kwjhAKYAAQBsIQAAAACTCO0AqwABAHQhAAAAAJYIfAWxAAIAeyEAAAAAhhhYBAYAAgCDIQAAAACR
GF4EtgACAAAAAQAFAwkAWAQBABEAWAQGABkAWAQKACkAWAQQADEAWAQQADkAWAQQAEEAWAQQAEkA
WAQQAFEAWAQQAFkAWAQQAGEAWAQQAGkAWAQGAIEAWAQGAKkAWAQVALkAWAQGAHEAVgUhAMEAiAUB
AMEAKgUmAMkA0AMrANEA8QIxANkAZAA1ANkAcwU6ANkApAVAANEA+wJGANkALgNLAOEAPQFRAOEA
JQNYAHEAWAQGAIkAWAQGAPEAogBdAPEAlwVkAJEAWARqALEAWAQGAAgAFACEAAgAGACJACkAcwDx
AC4ACwDJAC4AEwDSAC4AGwDxAC4AIwD6AC4AKwAjAS4AMwAjAS4AOwAjAS4AQwD6AC4ASwApAS4A
UwAjAS4AWwBAAUMAYwCJAEkAcwDxAGEAewCJAGMAawCJABsAAwABAAQAAwAAAEgEugAAAAEBvwAA
AIAFxAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAHMZjlUAAAAAAAABAAAABAAAAAAA
AAAAAAAAcgBbAAAAAAALAAAAAAAAAAAAAAB7ADgDAAAAAAQAAAAAAAAAAAAAAHIA2QMAAAAACwAA
AAAAAAAAAAAAewA0AAAAAAAAAAAAAQAAAKkEAAAFAAIAAAAAAABTVF8yMzQ3ODFiNjZkZTU0NTVj
YjUzMGM2MDdmY2JjZGM3MQBJbnQzMgA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFn
ZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBJc051bGxPcldoaXRlU3BhY2UAZGVmYXVsdEluc3RhbmNl
AFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UAUGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1
ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJz
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUXzIzNDc4MWI2NmRlNTQ1NWNiNTMwYzYwN2ZjYmNkYzcxLmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMjM0NzgxYjY2ZGU1NDU1Y2I1MzBj
NjA3ZmNiY2RjNzEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUXzIzNDc4MWI2NmRlNTQ1NWNiNTMwYzYwN2ZjYmNkYzcxLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBOdW1iZXJTdHlsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMA
T2JqZWN0AFBhZFJpZ2h0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3NlbWJseQBv
cF9FcXVhbGl0eQAAG1UAcwBlAHIAOgA6AFMAdABhAHIAdABJAEQAAAEAA1gAAHFTAFQAXwAyADMA
NAA3ADgAMQBiADYANgBkAGUANQA0ADUANQBjAGIANQAzADAAYwA2ADAANwBmAGMAYgBjAGQAYwA3
ADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAABx+8rFkh75L
q2jXIkU6+NgABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEFBwMOCA4EIAASYQQgABJlBSABEmkc
AyAAHAQAAQIOBSACDggDBQACAg4OBCABARwFIAIOCAgGAAIIDhF1BCABDg4GAAESeRF9BSAAEoCB
ByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQA
ABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzIzNDc4MWI2NmRlNTQ1NWNiNTMw
YzYwN2ZjYmNkYzcxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsg
NLQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAAAAAAAAAAAAAAAAAAACAAAAHAEAAKQuAACkEAAAUlNEUwAAAAAAAAAAAAAA
AAAAAAABAAAAQzpcVXNlcnNcdGdlZXJcQXBwRGF0YVxMb2NhbFxUZW1wXHZzdGFcYTFkNTc1YTlh
Mjc2NDc3N2JiYTlkMTA3OTM1NjE2NjJcb2JqXFJlbGVhc2VcU1RfMjM0NzgxYjY2ZGU1NDU1Y2I1
MzBjNjA3ZmNiY2RjNzEucGRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoLwAAAAAAAAAAAAACMAAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9C8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAI5VcxkAAAEAjlVzGT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AMgAzADQANwA4ADEAYgA2ADYAZABlADUANAA1ADUAYwBiADUAMwAwAGMANgAwADcA
ZgBjAGIAYwBkAGMANwAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADYANQAxADUALgAyADEAOQAwADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMgAzADQANwA4ADEAYgA2ADYAZABlADUANAA1ADUAYwBiADUAMwAwAGMANgAwADcAZgBj
AGIAYwBkAGMANwAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAyADMANAA3ADgAMQBiADYANgBkAGUANQA0ADUANQBjAGIANQAzADAAYwA2
ADAANwBmAGMAYgBjAGQAYwA3ADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AMgAzADQANwA4ADEAYgA2ADYAZABlADUANAA1ADUAYwBiADUAMwAwAGMANgAw
ADcAZgBjAGIAYwBkAGMANwAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA2ADUAMQA1AC4AMgAxADkAMAAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADUAMQA1AC4AMgAxADkAMAAyAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2897D807-C6EB-4A59-89F6-B35F7B37142C}"
      DTS:From="Package\Get Highlight Data from Mongo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Process the staged data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{6B95F493-6C4E-4E93-AB88-BD413D13DAD9}"
      DTS:From="Package\Get the Max ID in the database"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Remove 10 Minutes from the Max ID to create overlap" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{FEBA925F-5612-4650-B017-B871AE953D99}"
      DTS:From="Package\Remove 10 Minutes from the Max ID to create overlap"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get Highlight Data from Mongo" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="226,42"
          Id="Package\Get Highlight Data from Mongo"
          TopLeft="81,193" />
        <NodeLayout
          Size="227,42"
          Id="Package\Get the Max ID in the database"
          TopLeft="79,22" />
        <NodeLayout
          Size="192,42"
          Id="Package\Process the staged data"
          TopLeft="88,276" />
        <NodeLayout
          Size="335,42"
          Id="Package\Remove 10 Minutes from the Max ID to create overlap"
          TopLeft="51,105" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="194,235">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10,41"
              Start="0,0"
              End="-10,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5"
                    Point2="0,20.5"
                    Point3="-4,20.5" />
                  <mssgle:LineSegment
                    End="-6,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-6,20.5"
                    Point2="-10,20.5"
                    Point3="-10,24.5" />
                  <mssgle:LineSegment
                    End="-10,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="192.5,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26,41"
              Start="0,0"
              End="26,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.5"
                    Point2="0,20.5"
                    Point3="4,20.5" />
                  <mssgle:LineSegment
                    End="22,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="22,20.5"
                    Point2="26,20.5"
                    Point3="26,24.5" />
                  <mssgle:LineSegment
                    End="26,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="218.5,147">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,46"
              Start="0,0"
              End="-24.5,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19"
                    Point2="0,23"
                    Point3="-4,23" />
                  <mssgle:LineSegment
                    End="-20.5,23" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,23"
                    Point2="-24.5,23"
                    Point3="-24.5,27" />
                  <mssgle:LineSegment
                    End="-24.5,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get Highlight Data from Mongo">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="226,42"
          Id="Package\Get Highlight Data from Mongo\Get Highlight rows from Mongo"
          TopLeft="195,55" />
        <NodeLayout
          Size="205,42"
          Id="Package\Get Highlight Data from Mongo\DW stage mongo Highlight"
          TopLeft="217,145" />
        <EdgeLayout
          Id="Package\Get Highlight Data from Mongo.Paths[Row]"
          TopLeft="308,97">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11.5,48"
              Start="0,0"
              End="11.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="7.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="7.5,24"
                    Point2="11.5,24"
                    Point3="11.5,28" />
                  <mssgle:LineSegment
                    End="11.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get Highlight Data from Mongo\DW stage mongo Highlight">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>